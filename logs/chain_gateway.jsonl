{"time": "2025-10-10 09:38:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/gead version-app --home=/home/lino/.gea_uat --output=json", "success": 0, "stdout": "Version & Commit:  v2.0.7-mainnet-7-g0da368cf\nOne Day Duration:  86400s\nWrite Genesis Height:  9881282\nGenesis Block Numbers:  3000", "stderr": ""}
{"time": "2025-10-10 10:25:30", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys add 8b79f3e3-7617-44a3-bcea-cead0a7d73f0 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "", "stderr": "{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\",\"mnemonic\":\"supply until clip bring worth visa will enrich hedgehog table cup oxygen ivory fog sun renew lava judge hazard cousin kiss vanish filter upper\"}"}
{"time": "2025-10-10 10:25:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 10:28:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1npucpz37wnavje7thmkckj8padf9x9ejntntg4 me1npucpz37wnavje7thmkckj8padf9x9ejntntg4 1gea --from=me1npucpz37wnavje7thmkckj8padf9x9ejntntg4 --fees=100000ugea --gas=400000 --chain-id=me-chain --home=/home/lino/.meda-app_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 1, "stdout": "", "stderr": "Error: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account me1npucpz37wnavje7thmkckj8padf9x9ejntntg4 not found: key not found"}
{"time": "2025-10-10 14:33:41", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys add 515be0c4-5f71-4139-9b1a-821bf49f3e5f --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "", "stderr": "{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\",\"mnemonic\":\"sphere seven item release canoe happy frog snow album reflect history toward charge shoe later angry advice pull advice october evil glass rely pulp\"}"}
{"time": "2025-10-10 14:33:45", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 14:50:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys list --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"chn_node_user\",\"type\":\"local\",\"address\":\"me1jyprg7mjvztdfqrjxs4a5kttfrq4agvn3adm20\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AjMYcK/z46JRw61mnL8yHNo1tf3YvSNWuVaADJFI48Mk\\\"}\"},{\"name\":\"meid_dao\",\"type\":\"local\",\"address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AntqzGa+CNdTVkuT8vUVM/z3lqwqGapuRbdEsjGM5Xu9\\\"}\"},{\"name\":\"super\",\"type\":\"multi\",\"address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.multisig.LegacyAminoPubKey\\\",\\\"threshold\\\":3,\\\"public_keys\\\":[{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}]}\"},{\"name\":\"u1\",\"type\":\"local\",\"address\":\"me1mxkrx6f2x63tfcgevktskzldyetc55emwaxwgu\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"}\"},{\"name\":\"u2\",\"type\":\"local\",\"address\":\"me1qc87vw7hcm9zxc7acznwgcxt9gt6c39zwnnq4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"}\"},{\"name\":\"u3\",\"type\":\"local\",\"address\":\"me17wpu0whdfg647297cpnleedg2vtd5lhk407d3l\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"}\"},{\"name\":\"u4\",\"type\":\"local\",\"address\":\"me16atdhygxvdthtgxzsj2g4p6eekkxkngvy9amqy\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"}\"},{\"name\":\"u5\",\"type\":\"local\",\"address\":\"me1kwjh8x4jqvrruwq6tghyz2kztf9vqqc4l04lnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"}\"},{\"name\":\"u6\",\"type\":\"local\",\"address\":\"me1lz42epyqsqy6p4fejdanshcempzwahqxrmdn4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}\"},{\"name\":\"u7\",\"type\":\"local\",\"address\":\"me1mh42v6pjd62j95pgac3epwp7kxlps2ntw4ff3w\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 14:50:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys add 0fcd275c-28ff-4293-98a7-f08b96640ae7 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae7\",\"type\":\"local\",\"address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A/Is6mBB7EgyJjqdoudxyN4iPQJqT3zRm6GrOtTTQ0hN\\\"}\",\"mnemonic\":\"place work dust way giant patient promote govern surface consider fossil yard olive boil joy bulb elbow van casual image crystal bulb derive meadow\"}", "stderr": ""}
{"time": "2025-10-10 14:50:57", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys add 25295580-8dfa-43bb-bb2c-e95b176efc81 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"25295580-8dfa-43bb-bb2c-e95b176efc81\",\"type\":\"local\",\"address\":\"me1nzena46wkpyktswah9r64lmt7dc9gyq2eacpv5\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A8i3ACn1zkeExMJFEqHk0ya1lZIL48eYcbNv96fkuEtb\\\"}\",\"mnemonic\":\"soda peace analyst weather else cabbage inhale burden brown question maximum faith chuckle symbol safe angry outdoor office inject balcony prepare spring oval enact\"}", "stderr": ""}
{"time": "2025-10-10 14:51:01", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys list --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae7\",\"type\":\"local\",\"address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A/Is6mBB7EgyJjqdoudxyN4iPQJqT3zRm6GrOtTTQ0hN\\\"}\"},{\"name\":\"25295580-8dfa-43bb-bb2c-e95b176efc81\",\"type\":\"local\",\"address\":\"me1nzena46wkpyktswah9r64lmt7dc9gyq2eacpv5\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A8i3ACn1zkeExMJFEqHk0ya1lZIL48eYcbNv96fkuEtb\\\"}\"},{\"name\":\"chn_node_user\",\"type\":\"local\",\"address\":\"me1jyprg7mjvztdfqrjxs4a5kttfrq4agvn3adm20\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AjMYcK/z46JRw61mnL8yHNo1tf3YvSNWuVaADJFI48Mk\\\"}\"},{\"name\":\"meid_dao\",\"type\":\"local\",\"address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AntqzGa+CNdTVkuT8vUVM/z3lqwqGapuRbdEsjGM5Xu9\\\"}\"},{\"name\":\"super\",\"type\":\"multi\",\"address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.multisig.LegacyAminoPubKey\\\",\\\"threshold\\\":3,\\\"public_keys\\\":[{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}]}\"},{\"name\":\"u1\",\"type\":\"local\",\"address\":\"me1mxkrx6f2x63tfcgevktskzldyetc55emwaxwgu\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"}\"},{\"name\":\"u2\",\"type\":\"local\",\"address\":\"me1qc87vw7hcm9zxc7acznwgcxt9gt6c39zwnnq4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"}\"},{\"name\":\"u3\",\"type\":\"local\",\"address\":\"me17wpu0whdfg647297cpnleedg2vtd5lhk407d3l\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"}\"},{\"name\":\"u4\",\"type\":\"local\",\"address\":\"me16atdhygxvdthtgxzsj2g4p6eekkxkngvy9amqy\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"}\"},{\"name\":\"u5\",\"type\":\"local\",\"address\":\"me1kwjh8x4jqvrruwq6tghyz2kztf9vqqc4l04lnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"}\"},{\"name\":\"u6\",\"type\":\"local\",\"address\":\"me1lz42epyqsqy6p4fejdanshcempzwahqxrmdn4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}\"},{\"name\":\"u7\",\"type\":\"local\",\"address\":\"me1mh42v6pjd62j95pgac3epwp7kxlps2ntw4ff3w\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 14:52:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10gea --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 14:52:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/gead tx sign json/tx-generate-only-20251010-145212-4a54f5.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting account from keybase: me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al.info: key not found [cosmos/cosmos-sdk@v0.47.13/crypto/keyring/keyring.go:540]\nUsage:\n  gead tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_gea_logger   use gea logger instead of cosmos lib logger\n      --home string         directory for config and data (default \"/home/lino/.gea\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color        Disable colored logs\n      --trace               print out full stack trace on errors"}
{"time": "2025-10-10 14:52:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/gead tx sign json/tx-generate-only-20251010-145212-4a54f5.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting account from keybase: me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al.info: key not found [cosmos/cosmos-sdk@v0.47.13/crypto/keyring/keyring.go:540]\nUsage:\n  gead tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_gea_logger   use gea logger instead of cosmos lib logger\n      --home string         directory for config and data (default \"/home/lino/.gea\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color        Disable colored logs\n      --trace               print out full stack trace on errors"}
{"time": "2025-10-10 14:52:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/gead tx sign json/tx-generate-only-20251010-145212-4a54f5.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting account from keybase: me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al.info: key not found [cosmos/cosmos-sdk@v0.47.13/crypto/keyring/keyring.go:540]\nUsage:\n  gead tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_gea_logger   use gea logger instead of cosmos lib logger\n      --home string         directory for config and data (default \"/home/lino/.gea\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color        Disable colored logs\n      --trace               print out full stack trace on errors"}
{"time": "2025-10-10 14:52:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/gead tx multisign json/tx-generate-only-20251010-145212-4a54f5.json global_dao json/tx-sign-20251010-145212-479f26.json json/tx-sign-20251010-145212-db97a9.json json/tx-sign-20251010-145212-5d4e8d.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting keybase multisig account: global_dao.info: key not found\nUsage:\n  gead tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_gea_logger   use gea logger instead of cosmos lib logger\n      --home string         directory for config and data (default \"/home/lino/.gea\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color        Disable colored logs\n      --trace               print out full stack trace on errors"}
{"time": "2025-10-10 14:52:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/gead tx broadcast json/tx-multisign-20251010-145212-27ee3b.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  gead tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_gea_logger   use gea logger instead of cosmos lib logger\n      --home string         directory for config and data (default \"/home/lino/.gea\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color        Disable colored logs\n      --trace               print out full stack trace on errors"}
{"time": "2025-10-10 14:53:44", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10gea --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 14:53:44", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-145344-2ba570.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"4zeaymybQeocGG7RAVj0p/kEqwI+C9q7RphY0xUKi/VJczD05Et0xB1PEWegEIZ/Yafd7OMNGaP9QrF68MRfhg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 14:54:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-145344-2ba570.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"V64DdlEK2MjoxhUei0MYOXljnsYQ3jvOelrtcT5HXuxliUB6/6BJCRQYCw2xUl6Nvdezlcv8jL2DPiwh+kDv+g==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 14:54:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-145344-2ba570.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"D2PxBbymYFJ0887i96vt7NhbBR9WTdiqTGJNJAEcQKFwzwdQcqvZctyeh3eLxSBrNgagu51LV21kx2i61ey+sg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 14:55:23", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-145344-2ba570.json global_dao json/tx-sign-20251010-145450-f2095d.json json/tx-sign-20251010-145450-e24e8f.json json/tx-sign-20251010-145523-6ee7f4.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting keybase multisig account: global_dao.info: key not found\nUsage:\n  med tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 14:55:23", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-145523-531d0e.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 14:55:42", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10gea --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 14:55:42", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-145542-7bd3ed.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"4zeaymybQeocGG7RAVj0p/kEqwI+C9q7RphY0xUKi/VJczD05Et0xB1PEWegEIZ/Yafd7OMNGaP9QrF68MRfhg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 14:55:59", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-145542-7bd3ed.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"V64DdlEK2MjoxhUei0MYOXljnsYQ3jvOelrtcT5HXuxliUB6/6BJCRQYCw2xUl6Nvdezlcv8jL2DPiwh+kDv+g==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 14:56:06", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-145542-7bd3ed.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"D2PxBbymYFJ0887i96vt7NhbBR9WTdiqTGJNJAEcQKFwzwdQcqvZctyeh3eLxSBrNgagu51LV21kx2i61ey+sg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 14:57:11", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-145542-7bd3ed.json global_dao json/tx-sign-20251010-145559-2a5413.json json/tx-sign-20251010-145606-4a3434.json json/tx-sign-20251010-145711-dcfa91.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting keybase multisig account: global_dao.info: key not found\nUsage:\n  med tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 14:57:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-145712-95af3e.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:06:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10gea --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:06:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-150650-e99c20.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"4zeaymybQeocGG7RAVj0p/kEqwI+C9q7RphY0xUKi/VJczD05Et0xB1PEWegEIZ/Yafd7OMNGaP9QrF68MRfhg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:07:56", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-150650-e99c20.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"V64DdlEK2MjoxhUei0MYOXljnsYQ3jvOelrtcT5HXuxliUB6/6BJCRQYCw2xUl6Nvdezlcv8jL2DPiwh+kDv+g==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:08:30", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-150650-e99c20.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"D2PxBbymYFJ0887i96vt7NhbBR9WTdiqTGJNJAEcQKFwzwdQcqvZctyeh3eLxSBrNgagu51LV21kx2i61ey+sg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:08:31", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-150650-e99c20.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"QvxaPVlsQbp66IzMHtVKcRm6BnRuUQsfGC4oC9+u1jJPTfcSOilKh5DCVpFI0LbW8CDkXFXqBXrp74RMUIC8OQ==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:09:36", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-150650-e99c20.json global_dao json/tx-sign-20251010-150756-f4d6db.json json/tx-sign-20251010-150830-9b34aa.json json/tx-sign-20251010-150831-21559d.json json/tx-sign-20251010-150936-a7ad27.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting keybase multisig account: global_dao.info: key not found\nUsage:\n  med tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:09:36", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-150936-9e29c6.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:16:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10gea --from=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --fees=1000000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:16:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151639-c83bf5.json --from=u1 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc001b9b3f8, 0x14, 0x18}, {0x587f320, 0xc001d9b8f0}, 0x0, {0x7ffc90bbf1a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc001bcbb08, {0xc001b8bf00, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc001bcbb08, {0xc001b8be80, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc00134b808)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc00134b808, {0x0, 0x0}, {0xc0010cc420, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:16:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151639-c83bf5.json --from=u2 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc0011ebb90, 0x14, 0x18}, {0x587f320, 0xc0019a7da0}, 0x0, {0x7ffef954d1a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc001876c08, {0xc0011de280, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc001876c08, {0xc0011de200, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc000d93508)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc000d93508, {0x0, 0x0}, {0xc001790d50, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:16:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151639-c83bf5.json --from=u3 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc0018f80c0, 0x14, 0x18}, {0x587f320, 0xc001c20b40}, 0x0, {0x7ffd4f91a1a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc001954f08, {0xc001a13e80, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc001954f08, {0xc001a13e00, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc0013ed808)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc0013ed808, {0x0, 0x0}, {0xc001465350, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:16:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151639-c83bf5.json --from=u4 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc001bb4000, 0x14, 0x18}, {0x587f320, 0xc001b66660}, 0x0, {0x7ffe15acf1a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc0019bec08, {0xc001acae80, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc0019bec08, {0xc001acae00, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc001449508)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc001449508, {0x0, 0x0}, {0xc000235128, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:16:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-151639-c83bf5.json meid_dao json/tx-sign-20251010-151639-81dcd2.json json/tx-sign-20251010-151639-a407ca.json json/tx-sign-20251010-151639-ed0362.json json/tx-sign-20251010-151639-994618.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetMultiSignCommand.makeMultiSignCmd.func1(0xc001a3d508, {0xc0014c82c0, 0x6, 0xb?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_multisign.go:112 +0x107f\ngithub.com/spf13/cobra.(*Command).execute(0xc001a3d508, {0xc0014c8210, 0xb, 0xb})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc0014b7808)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc0014b7808, {0x0, 0x0}, {0xc00155ae58, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:16:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-151639-c1388e.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:17:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10gea --from=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --fees=1000000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:17:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151721-d11036.json --from=u1 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc001194af8, 0x14, 0x18}, {0x587f320, 0xc0012bccf0}, 0x0, {0x7ffeca3831a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc0011eac08, {0xc0008a9180, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc0011eac08, {0xc0008a9100, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc00149f808)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc00149f808, {0x0, 0x0}, {0xc001537110, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:17:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151721-d11036.json --from=u2 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc001c96ab0, 0x14, 0x18}, {0x587f320, 0xc0010f8090}, 0x0, {0x7ffeb6c3d1a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc001562908, {0xc001ba4980, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc001562908, {0xc001ba4900, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc0015b0908)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc0015b0908, {0x0, 0x0}, {0xc001441c50, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:17:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151721-d11036.json --from=u3 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc001add530, 0x14, 0x18}, {0x587f320, 0xc001a84990}, 0x0, {0x7fffb14dd1a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc00188ac08, {0xc00137db00, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc00188ac08, {0xc00137da80, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc001487508)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc001487508, {0x0, 0x0}, {0xc000f6edf8, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:17:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-151721-d11036.json --from=u4 --multisig=me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 2, "stdout": "", "stderr": "panic: interface conversion: types.PubKey is *secp256k1.PubKey, not *multisig.LegacyAminoPubKey\n\ngoroutine 1 [running]:\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.signTx(_, {{0xc001960438, 0x14, 0x18}, {0x587f320, 0xc001c833e0}, 0x0, {0x7ffe7e2141a4, 0x8}, {0x5896ca0, ...}, ...}, ...)\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:369 +0x11ea\ngithub.com/cosmos/cosmos-sdk/x/auth/client/cli.GetSignCommand.makeSignCmd.func1(0xc0019c6f08, {0xc001af0700, 0x1, 0x8?})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/x/auth/client/cli/tx_sign.go:318 +0x2c9\ngithub.com/spf13/cobra.(*Command).execute(0xc0019c6f08, {0xc001af0680, 0x8, 0x8})\n\tgithub.com/spf13/cobra@v1.8.0/command.go:983 +0xb34\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc001321808)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1115 +0x44f\ngithub.com/spf13/cobra.(*Command).Execute(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1039\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n\tgithub.com/spf13/cobra@v1.8.0/command.go:1032\ngithub.com/cosmos/cosmos-sdk/server/cmd.Execute(0xc001321808, {0x0, 0x0}, {0xc0013894b8, 0x13})\n\tgithub.com/cosmos/cosmos-sdk@v0.47.13/server/cmd/execute.go:33 +0x16e\nmain.main()\n\tgithub.com/st-chain/me-hub/cmd/med/main.go:16 +0x2e"}
{"time": "2025-10-10 15:17:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-151721-d11036.json global_dao json/tx-sign-20251010-151721-b45e86.json json/tx-sign-20251010-151721-1cb248.json json/tx-sign-20251010-151721-8f7d74.json json/tx-sign-20251010-151721-cd6a47.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting keybase multisig account: global_dao.info: key not found\nUsage:\n  med tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:17:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-151721-fb157d.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:27:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10gea --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:27:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-152743-7c61ff.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"4zeaymybQeocGG7RAVj0p/kEqwI+C9q7RphY0xUKi/VJczD05Et0xB1PEWegEIZ/Yafd7OMNGaP9QrF68MRfhg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:28:48", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-152743-7c61ff.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"V64DdlEK2MjoxhUei0MYOXljnsYQ3jvOelrtcT5HXuxliUB6/6BJCRQYCw2xUl6Nvdezlcv8jL2DPiwh+kDv+g==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:29:04", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-152743-7c61ff.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"D2PxBbymYFJ0887i96vt7NhbBR9WTdiqTGJNJAEcQKFwzwdQcqvZctyeh3eLxSBrNgagu51LV21kx2i61ey+sg==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:29:20", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-152743-7c61ff.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"QvxaPVlsQbp66IzMHtVKcRm6BnRuUQsfGC4oC9+u1jJPTfcSOilKh5DCVpFI0LbW8CDkXFXqBXrp74RMUIC8OQ==\"}},\"sequence\":\"381\"}]}", "stderr": ""}
{"time": "2025-10-10 15:29:36", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-152743-7c61ff.json super json/tx-sign-20251010-152848-a9f818.json json/tx-sign-20251010-152904-b9df77.json json/tx-sign-20251010-152920-396a03.json json/tx-sign-20251010-152936-9efc72.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"gea\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"381\"}],\"fee\":{\"amount\":[{\"denom\":\"ugea\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkBXrgN2UQrYyOjGFR6LQxg5eWOexhDeO856Wu1xPkde7GWJQHr/oEkJFBgLDbFSXo2917OVy/yMvYM+LCH6QO/6CkBC/Fo9WWxBunrojMwe1UpxGboGdG5RCx8YLigL367WMk9N9xI6KUqHkMJWkUjQttbwIORcVeoFeunvhExQgLw5CkDjN5rKbJtB6hwYbtEBWPSn+QSrAj4L2rtGmFjTFQqL9UlzMPTkS3TEHU8RZ6AQhn9hp93s4w0Zo/1CsXrwxF+GCkAPY/EFvKZgUnTzzuL3q+3s2FsFH1ZN2KpMYk0kARxAoXDPB1Byq9ly3J6Hd4vFIGs2BqC7nUtXbWTHaLrV7L6y\"]}", "stderr": ""}
{"time": "2025-10-10 15:29:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-152952-cae539.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"9CBF07BC03A70231BBCF7302638528D5135AF6EBF5B1B7AF61FE03948BA7871B\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-10 15:39:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2 me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 10mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"to_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:41:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2 me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 10mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"to_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:43:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2 me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 10mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"to_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:43:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154327-9ee716.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u1\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:43:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154327-9ee716.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u2\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:43:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154327-9ee716.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u3\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:43:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154327-9ee716.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u4\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:43:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-154327-9ee716.json super json/tx-sign-20251010-154327-862e9e.json json/tx-sign-20251010-154327-bfa7c7.json json/tx-sign-20251010-154327-631ff2.json json/tx-sign-20251010-154327-1b273e.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF\nUsage:\n  med tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:43:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-154327-ca650a.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:46:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 1mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 15:46:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154650-0439d4.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"UkIFvh0bbWoIHqcfYBwJe6vSe08LHxDiqZu8hwIDwwtGlRD62wWoJWEI7KfrwADn1EteXVlvYpBNnKcG2kPPiw==\"}},\"sequence\":\"382\"}]}", "stderr": ""}
{"time": "2025-10-10 15:46:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154650-0439d4.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"zxbGNhWlBT6f/OByVHOrO5BENWEB4RdbVx6OROuxlpJfGp+EtcK1hW3XLvFMafyMbyQgifBcgi8peFJ1H/KxVw==\"}},\"sequence\":\"382\"}]}", "stderr": ""}
{"time": "2025-10-10 15:47:23", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154650-0439d4.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"DoGA/rTPuW83+6TAvfMl74FS8hJ9TFvvmHc5lB1vr+xaMBx8MJEgtu1oNgJy59+gNhpIFjaZwhSyJHv+4Dtz+A==\"}},\"sequence\":\"382\"}]}", "stderr": ""}
{"time": "2025-10-10 15:47:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251010-154650-0439d4.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"QKwRo/e6xFBb7vxKkOWUYHFtBKXO/58y24XEbm/R1mk5XT5O+6a/jZpE+6XHSSKbvIBhDHDhz7h2KWDVWwpv5w==\"}},\"sequence\":\"382\"}]}", "stderr": ""}
{"time": "2025-10-10 15:47:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251010-154650-0439d4.json super json/tx-sign-20251010-154650-31dd2a.json json/tx-sign-20251010-154723-16b981.json json/tx-sign-20251010-154727-4f5deb.json json/tx-sign-20251010-154727-ac7728.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"382\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkDPFsY2FaUFPp/84HJUc6s7kEQ1YQHhF1tXHo5E67GWkl8an4S1wrWFbdcu8Uxp/IxvJCCJ8FyCLyl4UnUf8rFXCkBArBGj97rEUFvu/EqQ5ZRgcW0Epc7/nzLbhcRub9HWaTldPk77pr+NmkT7pcdJIpu8gGEMcOHPuHYpYNVbCm/nCkBSQgW+HRttaggepx9gHAl7q9J7TwsfEOKpm7yHAgPDC0aVEPrbBaglYQjsp+vAAOfUS15dWW9ikE2cpwbaQ8+LCkAOgYD+tM+5bzf7pMC98yXvgVLyEn1MW++YdzmUHW+v7FowHHwwkSC27Wg2AnLn36A2GkgWNpnCFLIke/7gO3P4\"]}", "stderr": ""}
{"time": "2025-10-10 15:47:29", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251010-154729-dfb861.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"D17D8067098E7F20C2F8964A0A170B5436DF7D830499991E79EA640BCCF2AA46\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-10 15:47:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D17D8067098E7F20C2F8964A0A170B5436DF7D830499991E79EA640BCCF2AA46 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (D17D8067098E7F20C2F8964A0A170B5436DF7D830499991E79EA640BCCF2AA46) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-10 15:47:40", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D17D8067098E7F20C2F8964A0A170B5436DF7D830499991E79EA640BCCF2AA46 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9006877\",\"txhash\":\"D17D8067098E7F20C2F8964A0A170B5436DF7D830499991E79EA640BCCF2AA46\",\"codespace\":\"\",\"code\":0,\"data\":\"12260A242F636F736D6F732E62616E6B2E763162657461312E4D736753656E64526573706F6E7365\",\"raw_log\":\"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/cosmos.bank.v1beta1.MsgSend\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"bank\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"100000000umec\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"100000000umec\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"100000000umec\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"}]}]}]\",\"logs\":[{\"msg_index\":0,\"log\":\"\",\"events\":[{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/cosmos.bank.v1beta1.MsgSend\"},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"module\",\"value\":\"bank\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"amount\",\"value\":\"100000000umec\"}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\"},{\"key\":\"amount\",\"value\":\"100000000umec\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\"},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"amount\",\"value\":\"100000000umec\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"}]}]}],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"92600\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"382\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkDPFsY2FaUFPp/84HJUc6s7kEQ1YQHhF1tXHo5E67GWkl8an4S1wrWFbdcu8Uxp/IxvJCCJ8FyCLyl4UnUf8rFXCkBArBGj97rEUFvu/EqQ5ZRgcW0Epc7/nzLbhcRub9HWaTldPk77pr+NmkT7pcdJIpu8gGEMcOHPuHYpYNVbCm/nCkBSQgW+HRttaggepx9gHAl7q9J7TwsfEOKpm7yHAgPDC0aVEPrbBaglYQjsp+vAAOfUS15dWW9ikE2cpwbaQ8+LCkAOgYD+tM+5bzf7pMC98yXvgVLyEn1MW++YdzmUHW+v7FowHHwwkSC27Wg2AnLn36A2GkgWNpnCFLIke/7gO3P4\"]},\"timestamp\":\"2025-10-10T07:47:34Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/382\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"zxbGNhWlBT6f/OByVHOrO5BENWEB4RdbVx6OROuxlpJfGp+EtcK1hW3XLvFMafyMbyQgifBcgi8peFJ1H/KxVw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"QKwRo/e6xFBb7vxKkOWUYHFtBKXO/58y24XEbm/R1mk5XT5O+6a/jZpE+6XHSSKbvIBhDHDhz7h2KWDVWwpv5w==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"UkIFvh0bbWoIHqcfYBwJe6vSe08LHxDiqZu8hwIDwwtGlRD62wWoJWEI7KfrwADn1EteXVlvYpBNnKcG2kPPiw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"DoGA/rTPuW83+6TAvfMl74FS8hJ9TFvvmHc5lB1vr+xaMBx8MJEgtu1oNgJy59+gNhpIFjaZwhSyJHv+4Dtz+A==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkDPFsY2FaUFPp/84HJUc6s7kEQ1YQHhF1tXHo5E67GWkl8an4S1wrWFbdcu8Uxp/IxvJCCJ8FyCLyl4UnUf8rFXCkBArBGj97rEUFvu/EqQ5ZRgcW0Epc7/nzLbhcRub9HWaTldPk77pr+NmkT7pcdJIpu8gGEMcOHPuHYpYNVbCm/nCkBSQgW+HRttaggepx9gHAl7q9J7TwsfEOKpm7yHAgPDC0aVEPrbBaglYQjsp+vAAOfUS15dWW9ikE2cpwbaQ8+LCkAOgYD+tM+5bzf7pMC98yXvgVLyEn1MW++YdzmUHW+v7FowHHwwkSC27Wg2AnLn36A2GkgWNpnCFLIke/7gO3P4\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/cosmos.bank.v1beta1.MsgSend\",\"index\":true},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"module\",\"value\":\"bank\",\"index\":true}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"amount\",\"value\":\"100000000umec\",\"index\":true}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"index\":true},{\"key\":\"amount\",\"value\":\"100000000umec\",\"index\":true}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"index\":true},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"amount\",\"value\":\"100000000umec\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-10 17:18:28", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys add 811a8a65-67db-4d2a-bb77-2db8fc99fa87 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "", "stderr": "{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\",\"mnemonic\":\"burger detail benefit tortoise prevent letter salute brief file style royal panel age rough kidney tonight person bullet decline pave afraid august token inherit\"}"}
{"time": "2025-10-10 17:18:36", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae9\",\"type\":\"local\",\"address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ay7ZHh/clMZoO219ntDK8W8WohXohsXy/PJuMzkX46ta\\\"}\"},{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:19:09", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae9\",\"type\":\"local\",\"address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ay7ZHh/clMZoO219ntDK8W8WohXohsXy/PJuMzkX46ta\\\"}\"},{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:19:26", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd query bank balances me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf --chain-id=me-da --count-total=true --home=/home/lino/.meda-app_uat --node=tcp://118.175.0.230:36657 --output=json --reverse=true --limit=10 --page=1", "success": 0, "stdout": "{\"balances\":[],\"pagination\":{\"next_key\":null,\"total\":\"0\"}}", "stderr": ""}
{"time": "2025-10-10 17:23:18", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae9\",\"type\":\"local\",\"address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ay7ZHh/clMZoO219ntDK8W8WohXohsXy/PJuMzkX46ta\\\"}\"},{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:29:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys add f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6 --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6\",\"type\":\"local\",\"address\":\"me1k0fu0pc6zlnj90nr2p5tj8j3elx0h2ps6g08lz\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AujRsyj3UGo5uAJngaU8EIsqUGKWWYQnwhUYb3oNjiUI\\\"}\",\"mnemonic\":\"donate reopen order because wet autumn hip sword hero abandon spice edge toss fossil blur broom remind moral produce family finger noise random vital\"}", "stderr": ""}
{"time": "2025-10-10 17:30:07", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys list --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6\",\"type\":\"local\",\"address\":\"me1k0fu0pc6zlnj90nr2p5tj8j3elx0h2ps6g08lz\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AujRsyj3UGo5uAJngaU8EIsqUGKWWYQnwhUYb3oNjiUI\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:35:13", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys add 564bc536-9b07-47bd-b565-995847e2d707 --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"564bc536-9b07-47bd-b565-995847e2d707\",\"type\":\"local\",\"address\":\"me1wcru4ft978sldx0swlvkzpsuv5sawpfwshu0w0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AsoTrCG6pPZ8MWCdZxx57orFaM3zcM0iy89xEADy5p7x\\\"}\",\"mnemonic\":\"giant diesel trust barely slot soul smoke invest recall walk come property ginger render mistake exhaust solution ritual verb memory laugh sick huge tribe\"}", "stderr": ""}
{"time": "2025-10-10 17:35:16", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys list --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"564bc536-9b07-47bd-b565-995847e2d707\",\"type\":\"local\",\"address\":\"me1wcru4ft978sldx0swlvkzpsuv5sawpfwshu0w0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AsoTrCG6pPZ8MWCdZxx57orFaM3zcM0iy89xEADy5p7x\\\"}\"},{\"name\":\"f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6\",\"type\":\"local\",\"address\":\"me1k0fu0pc6zlnj90nr2p5tj8j3elx0h2ps6g08lz\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AujRsyj3UGo5uAJngaU8EIsqUGKWWYQnwhUYb3oNjiUI\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:48:18", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys list --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"564bc536-9b07-47bd-b565-995847e2d707\",\"type\":\"local\",\"address\":\"me1wcru4ft978sldx0swlvkzpsuv5sawpfwshu0w0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AsoTrCG6pPZ8MWCdZxx57orFaM3zcM0iy89xEADy5p7x\\\"}\"},{\"name\":\"f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6\",\"type\":\"local\",\"address\":\"me1k0fu0pc6zlnj90nr2p5tj8j3elx0h2ps6g08lz\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AujRsyj3UGo5uAJngaU8EIsqUGKWWYQnwhUYb3oNjiUI\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:51:10", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys list --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae7\",\"type\":\"local\",\"address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A/Is6mBB7EgyJjqdoudxyN4iPQJqT3zRm6GrOtTTQ0hN\\\"}\"},{\"name\":\"25295580-8dfa-43bb-bb2c-e95b176efc81\",\"type\":\"local\",\"address\":\"me1nzena46wkpyktswah9r64lmt7dc9gyq2eacpv5\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A8i3ACn1zkeExMJFEqHk0ya1lZIL48eYcbNv96fkuEtb\\\"}\"},{\"name\":\"chn_node_user\",\"type\":\"local\",\"address\":\"me1jyprg7mjvztdfqrjxs4a5kttfrq4agvn3adm20\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AjMYcK/z46JRw61mnL8yHNo1tf3YvSNWuVaADJFI48Mk\\\"}\"},{\"name\":\"meid_dao\",\"type\":\"local\",\"address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AntqzGa+CNdTVkuT8vUVM/z3lqwqGapuRbdEsjGM5Xu9\\\"}\"},{\"name\":\"super\",\"type\":\"multi\",\"address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.multisig.LegacyAminoPubKey\\\",\\\"threshold\\\":3,\\\"public_keys\\\":[{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}]}\"},{\"name\":\"u1\",\"type\":\"local\",\"address\":\"me1mxkrx6f2x63tfcgevktskzldyetc55emwaxwgu\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"}\"},{\"name\":\"u2\",\"type\":\"local\",\"address\":\"me1qc87vw7hcm9zxc7acznwgcxt9gt6c39zwnnq4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"}\"},{\"name\":\"u3\",\"type\":\"local\",\"address\":\"me17wpu0whdfg647297cpnleedg2vtd5lhk407d3l\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"}\"},{\"name\":\"u4\",\"type\":\"local\",\"address\":\"me16atdhygxvdthtgxzsj2g4p6eekkxkngvy9amqy\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"}\"},{\"name\":\"u5\",\"type\":\"local\",\"address\":\"me1kwjh8x4jqvrruwq6tghyz2kztf9vqqc4l04lnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"}\"},{\"name\":\"u6\",\"type\":\"local\",\"address\":\"me1lz42epyqsqy6p4fejdanshcempzwahqxrmdn4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}\"},{\"name\":\"u7\",\"type\":\"local\",\"address\":\"me1mh42v6pjd62j95pgac3epwp7kxlps2ntw4ff3w\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:51:31", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys list --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae7\",\"type\":\"local\",\"address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A/Is6mBB7EgyJjqdoudxyN4iPQJqT3zRm6GrOtTTQ0hN\\\"}\"},{\"name\":\"25295580-8dfa-43bb-bb2c-e95b176efc81\",\"type\":\"local\",\"address\":\"me1nzena46wkpyktswah9r64lmt7dc9gyq2eacpv5\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A8i3ACn1zkeExMJFEqHk0ya1lZIL48eYcbNv96fkuEtb\\\"}\"},{\"name\":\"chn_node_user\",\"type\":\"local\",\"address\":\"me1jyprg7mjvztdfqrjxs4a5kttfrq4agvn3adm20\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AjMYcK/z46JRw61mnL8yHNo1tf3YvSNWuVaADJFI48Mk\\\"}\"},{\"name\":\"meid_dao\",\"type\":\"local\",\"address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AntqzGa+CNdTVkuT8vUVM/z3lqwqGapuRbdEsjGM5Xu9\\\"}\"},{\"name\":\"super\",\"type\":\"multi\",\"address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.multisig.LegacyAminoPubKey\\\",\\\"threshold\\\":3,\\\"public_keys\\\":[{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}]}\"},{\"name\":\"u1\",\"type\":\"local\",\"address\":\"me1mxkrx6f2x63tfcgevktskzldyetc55emwaxwgu\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"}\"},{\"name\":\"u2\",\"type\":\"local\",\"address\":\"me1qc87vw7hcm9zxc7acznwgcxt9gt6c39zwnnq4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"}\"},{\"name\":\"u3\",\"type\":\"local\",\"address\":\"me17wpu0whdfg647297cpnleedg2vtd5lhk407d3l\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"}\"},{\"name\":\"u4\",\"type\":\"local\",\"address\":\"me16atdhygxvdthtgxzsj2g4p6eekkxkngvy9amqy\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"}\"},{\"name\":\"u5\",\"type\":\"local\",\"address\":\"me1kwjh8x4jqvrruwq6tghyz2kztf9vqqc4l04lnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"}\"},{\"name\":\"u6\",\"type\":\"local\",\"address\":\"me1lz42epyqsqy6p4fejdanshcempzwahqxrmdn4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}\"},{\"name\":\"u7\",\"type\":\"local\",\"address\":\"me1mh42v6pjd62j95pgac3epwp7kxlps2ntw4ff3w\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:51:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys list --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"564bc536-9b07-47bd-b565-995847e2d707\",\"type\":\"local\",\"address\":\"me1wcru4ft978sldx0swlvkzpsuv5sawpfwshu0w0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AsoTrCG6pPZ8MWCdZxx57orFaM3zcM0iy89xEADy5p7x\\\"}\"},{\"name\":\"f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6\",\"type\":\"local\",\"address\":\"me1k0fu0pc6zlnj90nr2p5tj8j3elx0h2ps6g08lz\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AujRsyj3UGo5uAJngaU8EIsqUGKWWYQnwhUYb3oNjiUI\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 17:58:54", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys list --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"564bc536-9b07-47bd-b565-995847e2d707\",\"type\":\"local\",\"address\":\"me1wcru4ft978sldx0swlvkzpsuv5sawpfwshu0w0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AsoTrCG6pPZ8MWCdZxx57orFaM3zcM0iy89xEADy5p7x\\\"}\"},{\"name\":\"f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6\",\"type\":\"local\",\"address\":\"me1k0fu0pc6zlnj90nr2p5tj8j3elx0h2ps6g08lz\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AujRsyj3UGo5uAJngaU8EIsqUGKWWYQnwhUYb3oNjiUI\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 18:00:22", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae9\",\"type\":\"local\",\"address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ay7ZHh/clMZoO219ntDK8W8WohXohsXy/PJuMzkX46ta\\\"}\"},{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 18:02:29", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys list --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae7\",\"type\":\"local\",\"address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A/Is6mBB7EgyJjqdoudxyN4iPQJqT3zRm6GrOtTTQ0hN\\\"}\"},{\"name\":\"25295580-8dfa-43bb-bb2c-e95b176efc81\",\"type\":\"local\",\"address\":\"me1nzena46wkpyktswah9r64lmt7dc9gyq2eacpv5\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A8i3ACn1zkeExMJFEqHk0ya1lZIL48eYcbNv96fkuEtb\\\"}\"},{\"name\":\"chn_node_user\",\"type\":\"local\",\"address\":\"me1jyprg7mjvztdfqrjxs4a5kttfrq4agvn3adm20\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AjMYcK/z46JRw61mnL8yHNo1tf3YvSNWuVaADJFI48Mk\\\"}\"},{\"name\":\"meid_dao\",\"type\":\"local\",\"address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AntqzGa+CNdTVkuT8vUVM/z3lqwqGapuRbdEsjGM5Xu9\\\"}\"},{\"name\":\"super\",\"type\":\"multi\",\"address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.multisig.LegacyAminoPubKey\\\",\\\"threshold\\\":3,\\\"public_keys\\\":[{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}]}\"},{\"name\":\"u1\",\"type\":\"local\",\"address\":\"me1mxkrx6f2x63tfcgevktskzldyetc55emwaxwgu\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"}\"},{\"name\":\"u2\",\"type\":\"local\",\"address\":\"me1qc87vw7hcm9zxc7acznwgcxt9gt6c39zwnnq4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"}\"},{\"name\":\"u3\",\"type\":\"local\",\"address\":\"me17wpu0whdfg647297cpnleedg2vtd5lhk407d3l\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"}\"},{\"name\":\"u4\",\"type\":\"local\",\"address\":\"me16atdhygxvdthtgxzsj2g4p6eekkxkngvy9amqy\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"}\"},{\"name\":\"u5\",\"type\":\"local\",\"address\":\"me1kwjh8x4jqvrruwq6tghyz2kztf9vqqc4l04lnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"}\"},{\"name\":\"u6\",\"type\":\"local\",\"address\":\"me1lz42epyqsqy6p4fejdanshcempzwahqxrmdn4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}\"},{\"name\":\"u7\",\"type\":\"local\",\"address\":\"me1mh42v6pjd62j95pgac3epwp7kxlps2ntw4ff3w\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 18:02:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae9\",\"type\":\"local\",\"address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ay7ZHh/clMZoO219ntDK8W8WohXohsXy/PJuMzkX46ta\\\"}\"},{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 18:02:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys list --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"564bc536-9b07-47bd-b565-995847e2d707\",\"type\":\"local\",\"address\":\"me1wcru4ft978sldx0swlvkzpsuv5sawpfwshu0w0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AsoTrCG6pPZ8MWCdZxx57orFaM3zcM0iy89xEADy5p7x\\\"}\"},{\"name\":\"f1df9aaa-ae75-48fc-b9f9-0b97ee4085b6\",\"type\":\"local\",\"address\":\"me1k0fu0pc6zlnj90nr2p5tj8j3elx0h2ps6g08lz\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AujRsyj3UGo5uAJngaU8EIsqUGKWWYQnwhUYb3oNjiUI\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 18:17:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64 1dmec --from=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --fees=1000000udmec --gas=400000 --generate-only --chain-id=me-da --home=/home/lino/.meda-app_uat --keyring-backend=test --node=http://118.175.0.230:36657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf\",\"to_address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"amount\":[{\"denom\":\"dmec\",\"amount\":\"1\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"udmec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-10 18:17:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx sign json/tx-generate-only-20251010-181737-09d179.json --from=u1 --multisig=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --chain-id=me-da --node=http://118.175.0.230:36657 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: u1.info: key not found"}
{"time": "2025-10-10 18:17:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx sign json/tx-generate-only-20251010-181737-09d179.json --from=u2 --multisig=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --chain-id=me-da --node=http://118.175.0.230:36657 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: u2.info: key not found"}
{"time": "2025-10-10 18:17:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx sign json/tx-generate-only-20251010-181737-09d179.json --from=u3 --multisig=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --chain-id=me-da --node=http://118.175.0.230:36657 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: u3.info: key not found"}
{"time": "2025-10-10 18:17:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx sign json/tx-generate-only-20251010-181737-09d179.json --from=u4 --multisig=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --chain-id=me-da --node=http://118.175.0.230:36657 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: u4.info: key not found"}
{"time": "2025-10-10 18:17:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx multisign json/tx-generate-only-20251010-181737-09d179.json global_dao json/tx-sign-20251010-181737-32dfea.json json/tx-sign-20251010-181737-153071.json json/tx-sign-20251010-181737-d2f340.json json/tx-sign-20251010-181737-b004cc.json --chain-id=me-da --node=http://118.175.0.230:36657 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: error getting keybase multisig account: global_dao.info: key not found"}
{"time": "2025-10-10 18:17:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx broadcast json/tx-multisign-20251010-181737-d44a0e.json --chain-id=me-da --node=http://118.175.0.230:36657 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error"}
{"time": "2025-10-10 18:17:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64 1dmec --from=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --fees=1000000udmec --gas=400000 --chain-id=me-da --home=/home/lino/.meda-app_uat --keyring-backend=test --node=http://118.175.0.230:36657 --output=json --yes", "success": 1, "stdout": "", "stderr": "Error: key with address me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf not found: key not found"}
{"time": "2025-10-10 18:25:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64 1dmec --from=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --fees=1000000udmec --gas=400000 --chain-id=me-da --home=/home/lino/.meda-app_uat --keyring-backend=test --node=http://118.175.0.230:36657 --output=json --yes", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"C466569ACEAB7EDA137E06FB701AC698F3DA0A33DB028088A7ED4958E7FFFBE4\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-10 18:30:47", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae9\",\"type\":\"local\",\"address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ay7ZHh/clMZoO219ntDK8W8WohXohsXy/PJuMzkX46ta\\\"}\"},{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"},{\"name\":\"global_dao\",\"type\":\"local\",\"address\":\"me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AyJ2AEiI1x77zcOPmMbEVTNE5U666Vl7HMrm/8q8Ay6Y\\\"}\"}]", "stderr": ""}
{"time": "2025-10-10 18:32:25", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf 1dmec --from=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --fees=1000000udmec --gas=400000 --chain-id=me-da --home=/home/lino/.meda-app_uat --keyring-backend=test --node=http://118.175.0.230:36657 --output=json --yes", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"A419B4E2911A20EA75EADDFB2913B3B2761E4CCC8E5C50115267F1084A5D5A0B\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-10 18:40:02", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd query bank balances me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf --chain-id=me-da --count-total=true --home=/home/lino/.meda-app_uat --node=http://118.175.0.230:36657 --output=json --reverse=true --limit=10 --page=1", "success": 0, "stdout": "{\"balances\":[{\"denom\":\"udmec\",\"amount\":\"9900000\"}],\"pagination\":{\"next_key\":null,\"total\":\"1\"}}", "stderr": ""}
{"time": "2025-10-10 18:40:19", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf 10dmec --from=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --fees=1000000udmec --gas=400000 --chain-id=me-da --home=/home/lino/.meda-app_uat --keyring-backend=test --node=http://118.175.0.230:36657 --output=json --yes", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"CBD29BF685AA6399CA2E104C693EE854397946C6200CFC8B699D9CAB9D23F74B\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-10 18:40:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd query tx CBD29BF685AA6399CA2E104C693EE854397946C6200CFC8B699D9CAB9D23F74B --chain-id=me-da --home=/home/lino/.meda-app_uat --node=http://118.175.0.230:36657 --output=json", "success": 0, "stdout": "{\"height\":\"1135399\",\"txhash\":\"CBD29BF685AA6399CA2E104C693EE854397946C6200CFC8B699D9CAB9D23F74B\",\"codespace\":\"sdk\",\"code\":5,\"data\":\"\",\"raw_log\":\"failed to execute message; message index: 0: 0dmec is smaller than 10dmec: insufficient funds\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"52881\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf\",\"to_address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"amount\":[{\"denom\":\"dmec\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AyJ2AEiI1x77zcOPmMbEVTNE5U666Vl7HMrm/8q8Ay6Y\"},\"mode_info\":{\"single\":{\"mode\":\"SIGN_MODE_DIRECT\"}},\"sequence\":\"117\"}],\"fee\":{\"amount\":[{\"denom\":\"udmec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"/bnMBfftmvCf6hsZGr6R3e1aXUR3Czd4HN1KLsTbXExQRRlS44YypJroLjLRxFQqmDMo6K8z+3xCwrid3DBEqQ==\"]},\"timestamp\":\"2025-10-10T10:40:20Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"ZmVl\",\"value\":null,\"index\":true},{\"key\":\"ZmVlX3BheWVy\",\"value\":\"bWUxZDRoNWs2amQ1dnJqZ3N4eTlsd3JwaHhsc3J2ODcwcGRhcHQwdWY=\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"YWNjX3NlcQ==\",\"value\":\"bWUxZDRoNWs2amQ1dnJqZ3N4eTlsd3JwaHhsc3J2ODcwcGRhcHQwdWYvMTE3\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"c2lnbmF0dXJl\",\"value\":\"L2JuTUJmZnRtdkNmNmhzWkdyNlIzZTFhWFVSM0N6ZDRITjFLTHNUYlhFeFFSUmxTNDRZeXBKcm9MakxSeEZRcW1ETW82Szh6KzN4Q3dyaWQzREJFcVE9PQ==\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 09:14:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank module_account_send me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 100med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000ugea --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 1, "stdout": "", "stderr": "Error: unknown command \"module_account_send\" for \"bank\"\nUsage:\n  med tx bank [flags]\n  med tx bank [command]\n\nAvailable Commands:\n  multi-send  Send funds from one account to two or more accounts.\n  send        Send funds from one account to another.\n\nFlags:\n  -h, --help   help for bank\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors\n\nUse \"med tx bank [command] --help\" for more information about a command."}
{"time": "2025-10-11 09:14:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091452-f4a2c6.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:14:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091452-f4a2c6.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:14:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091452-f4a2c6.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:14:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091452-f4a2c6.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:14:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-091452-f4a2c6.json super json/tx-sign-20251011-091452-320c4c.json json/tx-sign-20251011-091452-5be4da.json json/tx-sign-20251011-091452-7f82a2.json json/tx-sign-20251011-091452-5bf1ed.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:14:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-091452-6fa617.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:15:05", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank module_account_send me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 100med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000ugea --gas=400000 --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 1, "stdout": "", "stderr": "Error: unknown command \"module_account_send\" for \"bank\"\nUsage:\n  med tx bank [flags]\n  med tx bank [command]\n\nAvailable Commands:\n  multi-send  Send funds from one account to two or more accounts.\n  send        Send funds from one account to another.\n\nFlags:\n  -h, --help   help for bank\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors\n\nUse \"med tx bank [command] --help\" for more information about a command."}
{"time": "2025-10-11 09:15:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 100med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000ugea --gas=400000 --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 1, "stdout": "", "stderr": "Error: key with address me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh not found: key not found\nUsage:\n  med tx bank send [from_key_or_address] [to_address] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for send\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:18:23", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 10med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000ugea --gas=400000 --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"182721B431738552C04FABBDE2DA6F4C8BAFE881EE38EA6BB197228DBC2AEF3F\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 09:19:30", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 09:19:30", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091930-371bdc.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"sDtGU0D1X5yoD/sgIwb/wcd1qPd6AIbYSIJ3MCRPh7tJF49wdchnBFEuENgb2aPU3rH8xidqLqFhEZecYvbxgA==\"}},\"sequence\":\"383\"}]}", "stderr": ""}
{"time": "2025-10-11 09:19:31", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091930-371bdc.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"3xA4HF9l7vQP6ZKBVwo0CoQC639J7SnE9zOoTnG+5Iwya/ko09FOS9w5f6SHFt0H0xOUDde/SIEPUjfvdkiE0Q==\"}},\"sequence\":\"383\"}]}", "stderr": ""}
{"time": "2025-10-11 09:19:47", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091930-371bdc.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"ClhxThUdXoI7za1DyGfERzO0L030ZWPfKpaH0ZXtvlkATe/NbU/g0OWTRpo2/aS4ES3UXAQve6rjw4dMd6SbMA==\"}},\"sequence\":\"383\"}]}", "stderr": ""}
{"time": "2025-10-11 09:19:47", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-091930-371bdc.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"4LhxpxCeoJjPnBxsFsTJU1J0TEXJZlaSUiJIzdS4LQ55LiW/xw6kungyCL1CqKy0BEWS028MhpOrkCQ9/vicZQ==\"}},\"sequence\":\"383\"}]}", "stderr": ""}
{"time": "2025-10-11 09:19:51", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-091930-371bdc.json super json/tx-sign-20251011-091931-37acaf.json json/tx-sign-20251011-091947-2f6b06.json json/tx-sign-20251011-091947-c6a196.json json/tx-sign-20251011-091951-9a2042.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"383\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkDfEDgcX2Xu9A/pkoFXCjQKhALrf0ntKcT3M6hOcb7kjDJr+SjT0U5L3Dl/pIcW3QfTE5QN179IgQ9SN+92SITRCkDguHGnEJ6gmM+cHGwWxMlTUnRMRclmVpJSIkjN1LgtDnkuJb/HDqS6eDIIvUKorLQERZLTbwyGk6uQJD3++JxlCkCwO0ZTQPVfnKgP+yAjBv/Bx3Wo93oAhthIgncwJE+Hu0kXj3B1yGcEUS4Q2BvZo9TesfzGJ2ouoWERl5xi9vGACkAKWHFOFR1egjvNrUPIZ8RHM7QvTfRlY98qlofRle2+WQBN781tT+DQ5ZNGmjb9pLgRLdRcBC97quPDh0x3pJsw\"]}", "stderr": ""}
{"time": "2025-10-11 09:20:56", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0 me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al 1med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000ugea --gas=400000 --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"A6A65BD592C57278F66406E5537F80F212067BCD1BFFA13AFECBE9A1E2BE1991\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 09:21:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-092056-04a85f.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"05505B95E7F15F6DD80BAC6B0A35B750A3C945CF8D94C4742266F34987A171A5\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 09:21:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 05505B95E7F15F6DD80BAC6B0A35B750A3C945CF8D94C4742266F34987A171A5 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9018288\",\"txhash\":\"05505B95E7F15F6DD80BAC6B0A35B750A3C945CF8D94C4742266F34987A171A5\",\"codespace\":\"sdk\",\"code\":5,\"data\":\"\",\"raw_log\":\"failed to execute message; message index: 0: spendable balance 100000000umec is smaller than 1000000000umec: insufficient funds\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"67483\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"383\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkDfEDgcX2Xu9A/pkoFXCjQKhALrf0ntKcT3M6hOcb7kjDJr+SjT0U5L3Dl/pIcW3QfTE5QN179IgQ9SN+92SITRCkDguHGnEJ6gmM+cHGwWxMlTUnRMRclmVpJSIkjN1LgtDnkuJb/HDqS6eDIIvUKorLQERZLTbwyGk6uQJD3++JxlCkCwO0ZTQPVfnKgP+yAjBv/Bx3Wo93oAhthIgncwJE+Hu0kXj3B1yGcEUS4Q2BvZo9TesfzGJ2ouoWERl5xi9vGACkAKWHFOFR1egjvNrUPIZ8RHM7QvTfRlY98qlofRle2+WQBN781tT+DQ5ZNGmjb9pLgRLdRcBC97quPDh0x3pJsw\"]},\"timestamp\":\"2025-10-11T01:21:19Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/383\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"3xA4HF9l7vQP6ZKBVwo0CoQC639J7SnE9zOoTnG+5Iwya/ko09FOS9w5f6SHFt0H0xOUDde/SIEPUjfvdkiE0Q==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"4LhxpxCeoJjPnBxsFsTJU1J0TEXJZlaSUiJIzdS4LQ55LiW/xw6kungyCL1CqKy0BEWS028MhpOrkCQ9/vicZQ==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"sDtGU0D1X5yoD/sgIwb/wcd1qPd6AIbYSIJ3MCRPh7tJF49wdchnBFEuENgb2aPU3rH8xidqLqFhEZecYvbxgA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"ClhxThUdXoI7za1DyGfERzO0L030ZWPfKpaH0ZXtvlkATe/NbU/g0OWTRpo2/aS4ES3UXAQve6rjw4dMd6SbMA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkDfEDgcX2Xu9A/pkoFXCjQKhALrf0ntKcT3M6hOcb7kjDJr+SjT0U5L3Dl/pIcW3QfTE5QN179IgQ9SN+92SITRCkDguHGnEJ6gmM+cHGwWxMlTUnRMRclmVpJSIkjN1LgtDnkuJb/HDqS6eDIIvUKorLQERZLTbwyGk6uQJD3++JxlCkCwO0ZTQPVfnKgP+yAjBv/Bx3Wo93oAhthIgncwJE+Hu0kXj3B1yGcEUS4Q2BvZo9TesfzGJ2ouoWERl5xi9vGACkAKWHFOFR1egjvNrUPIZ8RHM7QvTfRlY98qlofRle2+WQBN781tT+DQ5ZNGmjb9pLgRLdRcBC97quPDh0x3pJsw\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 09:31:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=1000000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh\",\"to_address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 09:31:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093133-8a217b.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u1\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:31:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093133-8a217b.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u2\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:31:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093133-8a217b.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u3\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:31:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093133-8a217b.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: tx intended signer does not match the given signer: u4\nUsage:\n  med tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:31:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-093133-8a217b.json super json/tx-sign-20251011-093133-017fb7.json json/tx-sign-20251011-093133-b015a4.json json/tx-sign-20251011-093133-e2893b.json json/tx-sign-20251011-093133-3fe531.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF\nUsage:\n  med tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:31:34", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-093134-a2e2ce.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 1, "stdout": "", "stderr": "Error: EOF: tx parse error\nUsage:\n  med tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:32:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx bank send me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 1med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000ugea --gas=400000 --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 1, "stdout": "", "stderr": "Error: key with address me1quarn305vjusjaqxzdm8du09w63gjx3602z5zh not found: key not found\nUsage:\n  med tx bank send [from_key_or_address] [to_address] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 500000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for send\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:35:56", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region chn me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 100med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umed --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"chn\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"100\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 09:35:56", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093556-aa9d9d.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"1izPH3An3NjxPU06B8TbgvzJ7TlOH9WCRVzHnAFCMi07FXFf7CnboruN8uA5jJ7qhG1iQv4aWwRUiE6rHYpuFQ==\"}},\"sequence\":\"384\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:00", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093556-aa9d9d.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"scPl9vKQHz/xl2h1SveiZjLOg0w/SYnWNObC9hPNtqp8F7hmOCxUqNQfyYDFMm3LcXWON/2XynN/ZxS8HUC39g==\"}},\"sequence\":\"384\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:00", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093556-aa9d9d.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"UlkSBN4KiyuoTnlEsz3bUd401u7+u0/Ptizys7K8kNBKyTwuzJIr8GHJGhOFqqo4PP6MYwAUeV2ebT/n13wJOA==\"}},\"sequence\":\"384\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:08", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093556-aa9d9d.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"pMPYeyMUG4qqREDWG1FhsDkdHAL9YZWCjeUXZUDrRl8YlqZg1h+9OA6Ay2MBg6GIfiKXbq5y9tPuSVWekhLA0A==\"}},\"sequence\":\"384\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:08", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-093556-aa9d9d.json super json/tx-sign-20251011-093600-07f92b.json json/tx-sign-20251011-093600-92f6c6.json json/tx-sign-20251011-093608-2c7620.json json/tx-sign-20251011-093608-d80919.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"chn\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"100\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"384\"}],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkCxw+X28pAfP/GXaHVK96JmMs6DTD9JidY05sL2E822qnwXuGY4LFSo1B/JgMUybctxdY43/ZfKc39nFLwdQLf2CkCkw9h7IxQbiqpEQNYbUWGwOR0cAv1hlYKN5RdlQOtGXxiWpmDWH704DoDLYwGDoYh+IpdurnL20+5JVZ6SEsDQCkDWLM8fcCfc2PE9TToHxNuC/MntOU4f1YJFXMecAUIyLTsVcV/sKduiu43y4DmMnuqEbWJC/hpbBFSITqsdim4VCkBSWRIE3gqLK6hOeUSzPdtR3jTW7v67T8+2LPKzsryQ0ErJPC7MkivwYckaE4Wqqjg8/oxjABR5XZ5tP+fXfAk4\"]}", "stderr": ""}
{"time": "2025-10-11 09:36:16", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-093616-dbd005.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"91E39A6742FCBB311AC719FDDF24EFD45149CB9264B6729071A9D44DE5444465\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 09:36:17", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 91E39A6742FCBB311AC719FDDF24EFD45149CB9264B6729071A9D44DE5444465 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (91E39A6742FCBB311AC719FDDF24EFD45149CB9264B6729071A9D44DE5444465) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:36:21", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 91E39A6742FCBB311AC719FDDF24EFD45149CB9264B6729071A9D44DE5444465 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (91E39A6742FCBB311AC719FDDF24EFD45149CB9264B6729071A9D44DE5444465) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:36:23", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 91E39A6742FCBB311AC719FDDF24EFD45149CB9264B6729071A9D44DE5444465 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9018446\",\"txhash\":\"91E39A6742FCBB311AC719FDDF24EFD45149CB9264B6729071A9D44DE5444465\",\"codespace\":\"sdk\",\"code\":5,\"data\":\"\",\"raw_log\":\"failed to execute message; message index: 0: region me1j8xqe7uqnu4250tzur2628aql2mqfdx042sy4p have enough balance: insufficient funds\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"67306\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"chn\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"100\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"384\"}],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkCxw+X28pAfP/GXaHVK96JmMs6DTD9JidY05sL2E822qnwXuGY4LFSo1B/JgMUybctxdY43/ZfKc39nFLwdQLf2CkCkw9h7IxQbiqpEQNYbUWGwOR0cAv1hlYKN5RdlQOtGXxiWpmDWH704DoDLYwGDoYh+IpdurnL20+5JVZ6SEsDQCkDWLM8fcCfc2PE9TToHxNuC/MntOU4f1YJFXMecAUIyLTsVcV/sKduiu43y4DmMnuqEbWJC/hpbBFSITqsdim4VCkBSWRIE3gqLK6hOeUSzPdtR3jTW7v67T8+2LPKzsryQ0ErJPC7MkivwYckaE4Wqqjg8/oxjABR5XZ5tP+fXfAk4\"]},\"timestamp\":\"2025-10-11T01:36:15Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/384\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"scPl9vKQHz/xl2h1SveiZjLOg0w/SYnWNObC9hPNtqp8F7hmOCxUqNQfyYDFMm3LcXWON/2XynN/ZxS8HUC39g==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"pMPYeyMUG4qqREDWG1FhsDkdHAL9YZWCjeUXZUDrRl8YlqZg1h+9OA6Ay2MBg6GIfiKXbq5y9tPuSVWekhLA0A==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"1izPH3An3NjxPU06B8TbgvzJ7TlOH9WCRVzHnAFCMi07FXFf7CnboruN8uA5jJ7qhG1iQv4aWwRUiE6rHYpuFQ==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"UlkSBN4KiyuoTnlEsz3bUd401u7+u0/Ptizys7K8kNBKyTwuzJIr8GHJGhOFqqo4PP6MYwAUeV2ebT/n13wJOA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkCxw+X28pAfP/GXaHVK96JmMs6DTD9JidY05sL2E822qnwXuGY4LFSo1B/JgMUybctxdY43/ZfKc39nFLwdQLf2CkCkw9h7IxQbiqpEQNYbUWGwOR0cAv1hlYKN5RdlQOtGXxiWpmDWH704DoDLYwGDoYh+IpdurnL20+5JVZ6SEsDQCkDWLM8fcCfc2PE9TToHxNuC/MntOU4f1YJFXMecAUIyLTsVcV/sKduiu43y4DmMnuqEbWJC/hpbBFSITqsdim4VCkBSWRIE3gqLK6hOeUSzPdtR3jTW7v67T8+2LPKzsryQ0ErJPC7MkivwYckaE4Wqqjg8/oxjABR5XZ5tP+fXfAk4\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 09:36:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region chn me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umed --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"chn\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 09:36:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093637-efc86c.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"LR5IwftCqG+n6zZrVmR6cWri0JjI8gNFREy5C+fM7NNWDcRanA7N1rxw2y46P5kd6pH/4nfcexI8frW6OKGiIw==\"}},\"sequence\":\"385\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093637-efc86c.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"UBipcSCqi4etrTW9Zestk88eAagHU2HogKYKEgIVBV0HiOXjZ9HnhS6b3m5GjxGpHFu5eBPwY6YwxbeLvP4vhA==\"}},\"sequence\":\"385\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:45", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093637-efc86c.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"a56zqsWu6wgk6eZ5DQ4FkpYiPau9ZCINo1lxGYpNV/19tg7I6S0kAGquW9LGVXeIgwg3Nwp5YKztU9ouojnSbg==\"}},\"sequence\":\"385\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:45", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093637-efc86c.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"/+1TpQU9/s0ABagen/BfWWYRdeqOQTSr+0CQZ+K4hR5x2UH2DmchPG65Vky33iDbYwSUAHhr7AGbcOpkxXFukQ==\"}},\"sequence\":\"385\"}]}", "stderr": ""}
{"time": "2025-10-11 09:36:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-093637-efc86c.json super json/tx-sign-20251011-093637-a8feae.json json/tx-sign-20251011-093645-56c77f.json json/tx-sign-20251011-093645-bcef13.json json/tx-sign-20251011-093653-34cfc5.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"chn\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"385\"}],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkBQGKlxIKqLh62tNb1l6y2Tzx4BqAdTYeiApgoSAhUFXQeI5eNn0eeFLpvebkaPEakcW7l4E/BjpjDFt4u8/i+ECkD/7VOlBT3+zQAFqB6f8F9ZZhF16o5BNKv7QJBn4riFHnHZQfYOZyE8brlWTLfeINtjBJQAeGvsAZtw6mTFcW6RCkAtHkjB+0Kob6frNmtWZHpxauLQmMjyA0VETLkL58zs01YNxFqcDs3WvHDbLjo/mR3qkf/id9x7Ejx+tbo4oaIjCkBrnrOqxa7rCCTp5nkNDgWSliI9q71kIg2jWXEZik1X/X22DsjpLSQAaq5b0sZVd4iDCDc3CnlgrO1T2i6iOdJu\"]}", "stderr": ""}
{"time": "2025-10-11 09:36:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-093653-00f490.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"35476BA3FEA2BEDF7DB8D449F226216213DCC3F789F5134341A60D6F4E20B439\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 09:36:55", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 35476BA3FEA2BEDF7DB8D449F226216213DCC3F789F5134341A60D6F4E20B439 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (35476BA3FEA2BEDF7DB8D449F226216213DCC3F789F5134341A60D6F4E20B439) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:36:57", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 35476BA3FEA2BEDF7DB8D449F226216213DCC3F789F5134341A60D6F4E20B439 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (35476BA3FEA2BEDF7DB8D449F226216213DCC3F789F5134341A60D6F4E20B439) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:36:59", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 35476BA3FEA2BEDF7DB8D449F226216213DCC3F789F5134341A60D6F4E20B439 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9018453\",\"txhash\":\"35476BA3FEA2BEDF7DB8D449F226216213DCC3F789F5134341A60D6F4E20B439\",\"codespace\":\"sdk\",\"code\":5,\"data\":\"\",\"raw_log\":\"failed to execute message; message index: 0: region me1j8xqe7uqnu4250tzur2628aql2mqfdx042sy4p have enough balance: insufficient funds\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"67296\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"chn\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"385\"}],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkBQGKlxIKqLh62tNb1l6y2Tzx4BqAdTYeiApgoSAhUFXQeI5eNn0eeFLpvebkaPEakcW7l4E/BjpjDFt4u8/i+ECkD/7VOlBT3+zQAFqB6f8F9ZZhF16o5BNKv7QJBn4riFHnHZQfYOZyE8brlWTLfeINtjBJQAeGvsAZtw6mTFcW6RCkAtHkjB+0Kob6frNmtWZHpxauLQmMjyA0VETLkL58zs01YNxFqcDs3WvHDbLjo/mR3qkf/id9x7Ejx+tbo4oaIjCkBrnrOqxa7rCCTp5nkNDgWSliI9q71kIg2jWXEZik1X/X22DsjpLSQAaq5b0sZVd4iDCDc3CnlgrO1T2i6iOdJu\"]},\"timestamp\":\"2025-10-11T01:36:51Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/385\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"UBipcSCqi4etrTW9Zestk88eAagHU2HogKYKEgIVBV0HiOXjZ9HnhS6b3m5GjxGpHFu5eBPwY6YwxbeLvP4vhA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"/+1TpQU9/s0ABagen/BfWWYRdeqOQTSr+0CQZ+K4hR5x2UH2DmchPG65Vky33iDbYwSUAHhr7AGbcOpkxXFukQ==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"LR5IwftCqG+n6zZrVmR6cWri0JjI8gNFREy5C+fM7NNWDcRanA7N1rxw2y46P5kd6pH/4nfcexI8frW6OKGiIw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"a56zqsWu6wgk6eZ5DQ4FkpYiPau9ZCINo1lxGYpNV/19tg7I6S0kAGquW9LGVXeIgwg3Nwp5YKztU9ouojnSbg==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkBQGKlxIKqLh62tNb1l6y2Tzx4BqAdTYeiApgoSAhUFXQeI5eNn0eeFLpvebkaPEakcW7l4E/BjpjDFt4u8/i+ECkD/7VOlBT3+zQAFqB6f8F9ZZhF16o5BNKv7QJBn4riFHnHZQfYOZyE8brlWTLfeINtjBJQAeGvsAZtw6mTFcW6RCkAtHkjB+0Kob6frNmtWZHpxauLQmMjyA0VETLkL58zs01YNxFqcDs3WvHDbLjo/mR3qkf/id9x7Ejx+tbo4oaIjCkBrnrOqxa7rCCTp5nkNDgWSliI9q71kIg2jWXEZik1X/X22DsjpLSQAaq5b0sZVd4iDCDc3CnlgrO1T2i6iOdJu\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 09:38:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region me_earth me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 10med --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umed --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 09:38:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093833-3b179e.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"ff2K++uWrw0GgXdxUn6J4gqL3WLJek27O2NocK/5Z8dC10LeyZSSHiw2bg1tKjIJEdGuuJ0IlEFCMyv2/ne5pw==\"}},\"sequence\":\"386\"}]}", "stderr": ""}
{"time": "2025-10-11 09:38:33", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093833-3b179e.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"hsIBG+7ftu6kXM6rmYDbKgafNzaKx/cMge21iCrVoldJgDzHtcrKt7O7VsrA+ZBA8s7l259Rvulo1mfRl5LsAw==\"}},\"sequence\":\"386\"}]}", "stderr": ""}
{"time": "2025-10-11 09:38:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093833-3b179e.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"YQFMWGUbny8MNj0i0SfRKB6PrKry6xZkT1vbFVqRrrEG5rYQsySxPswK75mWn60UluMJqYFtoZZXV284RaGugA==\"}},\"sequence\":\"386\"}]}", "stderr": ""}
{"time": "2025-10-11 09:38:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093833-3b179e.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"lVHXNtq1EFiMI2UcIpL6b/wZhXRSvCb6bEdzIyh8oBQa+LQ2BTR0NIKzIz3P6FXvc+x3XWd2RL/VxnQIVS9z0A==\"}},\"sequence\":\"386\"}]}", "stderr": ""}
{"time": "2025-10-11 09:38:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-093833-3b179e.json super json/tx-sign-20251011-093833-7a7879.json json/tx-sign-20251011-093835-f4e810.json json/tx-sign-20251011-093835-8b38b7.json json/tx-sign-20251011-093835-bcd248.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"386\"}],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkCGwgEb7t+27qRczquZgNsqBp83NorH9wyB7bWIKtWiV0mAPMe1ysq3s7tWysD5kEDyzuXbn1G+6WjWZ9GXkuwDCkCVUdc22rUQWIwjZRwikvpv/BmFdFK8JvpsR3MjKHygFBr4tDYFNHQ0grMjPc/oVe9z7HddZ3ZEv9XGdAhVL3PQCkB9/Yr765avDQaBd3FSfoniCovdYsl6Tbs7Y2hwr/lnx0LXQt7JlJIeLDZuDW0qMgkR0a64nQiUQUIzK/b+d7mnCkBhAUxYZRufLww2PSLRJ9EoHo+sqvLrFmRPW9sVWpGusQbmthCzJLE+zArvmZafrRSW4wmpgW2hlldXbzhFoa6A\"]}", "stderr": ""}
{"time": "2025-10-11 09:38:36", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-093836-e9807d.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 09:38:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:38:41", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:38:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:38:45", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:38:48", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:38:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9018472\",\"txhash\":\"D617DEB08864BA0025A715EFB4583AAC819DF4E1B8ADCF9001F73D57F6DF729E\",\"codespace\":\"sdk\",\"code\":5,\"data\":\"\",\"raw_log\":\"failed to execute message; message index: 0: region me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2 have enough balance: insufficient funds\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"67397\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"med\",\"amount\":\"10\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"386\"}],\"fee\":{\"amount\":[{\"denom\":\"umed\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkCGwgEb7t+27qRczquZgNsqBp83NorH9wyB7bWIKtWiV0mAPMe1ysq3s7tWysD5kEDyzuXbn1G+6WjWZ9GXkuwDCkCVUdc22rUQWIwjZRwikvpv/BmFdFK8JvpsR3MjKHygFBr4tDYFNHQ0grMjPc/oVe9z7HddZ3ZEv9XGdAhVL3PQCkB9/Yr765avDQaBd3FSfoniCovdYsl6Tbs7Y2hwr/lnx0LXQt7JlJIeLDZuDW0qMgkR0a64nQiUQUIzK/b+d7mnCkBhAUxYZRufLww2PSLRJ9EoHo+sqvLrFmRPW9sVWpGusQbmthCzJLE+zArvmZafrRSW4wmpgW2hlldXbzhFoa6A\"]},\"timestamp\":\"2025-10-11T01:38:43Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/386\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"hsIBG+7ftu6kXM6rmYDbKgafNzaKx/cMge21iCrVoldJgDzHtcrKt7O7VsrA+ZBA8s7l259Rvulo1mfRl5LsAw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"lVHXNtq1EFiMI2UcIpL6b/wZhXRSvCb6bEdzIyh8oBQa+LQ2BTR0NIKzIz3P6FXvc+x3XWd2RL/VxnQIVS9z0A==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"ff2K++uWrw0GgXdxUn6J4gqL3WLJek27O2NocK/5Z8dC10LeyZSSHiw2bg1tKjIJEdGuuJ0IlEFCMyv2/ne5pw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"YQFMWGUbny8MNj0i0SfRKB6PrKry6xZkT1vbFVqRrrEG5rYQsySxPswK75mWn60UluMJqYFtoZZXV284RaGugA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkCGwgEb7t+27qRczquZgNsqBp83NorH9wyB7bWIKtWiV0mAPMe1ysq3s7tWysD5kEDyzuXbn1G+6WjWZ9GXkuwDCkCVUdc22rUQWIwjZRwikvpv/BmFdFK8JvpsR3MjKHygFBr4tDYFNHQ0grMjPc/oVe9z7HddZ3ZEv9XGdAhVL3PQCkB9/Yr765avDQaBd3FSfoniCovdYsl6Tbs7Y2hwr/lnx0LXQt7JlJIeLDZuDW0qMgkR0a64nQiUQUIzK/b+d7mnCkBhAUxYZRufLww2PSLRJ9EoHo+sqvLrFmRPW9sVWpGusQbmthCzJLE+zArvmZafrRSW4wmpgW2hlldXbzhFoa6A\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 09:39:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region me_earth me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9 100mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 09:39:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093958-548f0f.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"laid/zPNbUTWoWv0TU3nDeXes+VMrewTT3SVEsQI0XlBXSmPH9FhDaW0iZXS8gGWA9orR5U/eZvhswxzd0OrNw==\"}},\"sequence\":\"387\"}]}", "stderr": ""}
{"time": "2025-10-11 09:39:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093958-548f0f.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"a1cUXkZDvE+m7I2v3yNgoFJJZxOsaym+BBQZ1WJ36cgRci1MypukcCtCPe+BAOOPlG96Op2GzEf3owWWp8m06g==\"}},\"sequence\":\"387\"}]}", "stderr": ""}
{"time": "2025-10-11 09:39:59", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093958-548f0f.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"Y18273BD1J74QXtLiyB/wc2UWP33HS6rnnH0mU5fEbptGZrI1uCKLEnybRrzev0kGGq/FhhabpGGU4VKP9w0cw==\"}},\"sequence\":\"387\"}]}", "stderr": ""}
{"time": "2025-10-11 09:39:59", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-093958-548f0f.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"0L9TRuB12E02QyhWT4TbYgnWHAazHTmjRmgTZMHOblEgmZdicsqTND5akiTsrk3mdwUGjye8hNeV6zkzEOLY+w==\"}},\"sequence\":\"387\"}]}", "stderr": ""}
{"time": "2025-10-11 09:40:00", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-093958-548f0f.json super json/tx-sign-20251011-093958-633e93.json json/tx-sign-20251011-093959-4b77dc.json json/tx-sign-20251011-093959-68b435.json json/tx-sign-20251011-094000-8f3169.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"387\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkBrVxReRkO8T6bsja/fI2CgUklnE6xrKb4EFBnVYnfpyBFyLUzKm6RwK0I974EA44+Ub3o6nYbMR/ejBZanybTqCkDQv1NG4HXYTTZDKFZPhNtiCdYcBrMdOaNGaBNkwc5uUSCZl2JyypM0PlqSJOyuTeZ3BQaPJ7yE15XrOTMQ4tj7CkCVqJ3/M81tRNaha/RNTecN5d6z5Uyt7BNPdJUSxAjReUFdKY8f0WENpbSJldLyAZYD2itHlT95m+GzDHN3Q6s3CkBjXzbvcEPUnvhBe0uLIH/BzZRY/fcdLquecfSZTl8Rum0ZmsjW4IosSfJtGvN6/SQYar8WGFpukYZThUo/3DRz\"]}", "stderr": ""}
{"time": "2025-10-11 09:40:00", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-094000-b112ac.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"E3A7781543AF4B62B1A9FE708712D71CBF4B901038D7964F58CAF5C9B58D2409\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 09:40:01", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx E3A7781543AF4B62B1A9FE708712D71CBF4B901038D7964F58CAF5C9B58D2409 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (E3A7781543AF4B62B1A9FE708712D71CBF4B901038D7964F58CAF5C9B58D2409) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:40:04", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx E3A7781543AF4B62B1A9FE708712D71CBF4B901038D7964F58CAF5C9B58D2409 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (E3A7781543AF4B62B1A9FE708712D71CBF4B901038D7964F58CAF5C9B58D2409) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 09:40:06", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx E3A7781543AF4B62B1A9FE708712D71CBF4B901038D7964F58CAF5C9B58D2409 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9018484\",\"txhash\":\"E3A7781543AF4B62B1A9FE708712D71CBF4B901038D7964F58CAF5C9B58D2409\",\"codespace\":\"\",\"code\":0,\"data\":\"122F0A2D2F6D65746165617274682E777374616B696E672E4D7367576974686472617746726F6D526567696F6E52657370\",\"raw_log\":\"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/metaearth.wstaking.MsgWithdrawFromRegion\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"wstaking\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"},{\\\"key\\\":\\\"tag\\\",\\\"value\\\":\\\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"}]},{\\\"type\\\":\\\"withdraw_from_region\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"regionId\\\",\\\"value\\\":\\\"me_earth\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]}]}]\",\"logs\":[{\"msg_index\":0,\"log\":\"\",\"events\":[{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\"},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"module\",\"value\":\"wstaking\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"receiver\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]}]}],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"78053\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"387\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkBrVxReRkO8T6bsja/fI2CgUklnE6xrKb4EFBnVYnfpyBFyLUzKm6RwK0I974EA44+Ub3o6nYbMR/ejBZanybTqCkDQv1NG4HXYTTZDKFZPhNtiCdYcBrMdOaNGaBNkwc5uUSCZl2JyypM0PlqSJOyuTeZ3BQaPJ7yE15XrOTMQ4tj7CkCVqJ3/M81tRNaha/RNTecN5d6z5Uyt7BNPdJUSxAjReUFdKY8f0WENpbSJldLyAZYD2itHlT95m+GzDHN3Q6s3CkBjXzbvcEPUnvhBe0uLIH/BzZRY/fcdLquecfSZTl8Rum0ZmsjW4IosSfJtGvN6/SQYar8WGFpukYZThUo/3DRz\"]},\"timestamp\":\"2025-10-11T01:39:59Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/387\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"a1cUXkZDvE+m7I2v3yNgoFJJZxOsaym+BBQZ1WJ36cgRci1MypukcCtCPe+BAOOPlG96Op2GzEf3owWWp8m06g==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"0L9TRuB12E02QyhWT4TbYgnWHAazHTmjRmgTZMHOblEgmZdicsqTND5akiTsrk3mdwUGjye8hNeV6zkzEOLY+w==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"laid/zPNbUTWoWv0TU3nDeXes+VMrewTT3SVEsQI0XlBXSmPH9FhDaW0iZXS8gGWA9orR5U/eZvhswxzd0OrNw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"Y18273BD1J74QXtLiyB/wc2UWP33HS6rnnH0mU5fEbptGZrI1uCKLEnybRrzev0kGGq/FhhabpGGU4VKP9w0cw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkBrVxReRkO8T6bsja/fI2CgUklnE6xrKb4EFBnVYnfpyBFyLUzKm6RwK0I974EA44+Ub3o6nYbMR/ejBZanybTqCkDQv1NG4HXYTTZDKFZPhNtiCdYcBrMdOaNGaBNkwc5uUSCZl2JyypM0PlqSJOyuTeZ3BQaPJ7yE15XrOTMQ4tj7CkCVqJ3/M81tRNaha/RNTecN5d6z5Uyt7BNPdJUSxAjReUFdKY8f0WENpbSJldLyAZYD2itHlT95m+GzDHN3Q6s3CkBjXzbvcEPUnvhBe0uLIH/BzZRY/fcdLquecfSZTl8Rum0ZmsjW4IosSfJtGvN6/SQYar8WGFpukYZThUo/3DRz\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"index\":true},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"module\",\"value\":\"wstaking\",\"index\":true}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"receiver\",\"value\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 10:07:20", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys add a3095cbe-ffca-400f-85b3-63b6a7dbbac6 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"a3095cbe-ffca-400f-85b3-63b6a7dbbac6\",\"type\":\"local\",\"address\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"ApoQJopYcpOi883wDXZfCho1GTwY9ZFjCgTpIiRt6ZRL\\\"}\",\"mnemonic\":\"prison angle burden crawl window very action idea neither acquire work purity nothing squeeze absent degree fat arrow dumb head follow near dad visual\"}", "stderr": ""}
{"time": "2025-10-11 10:07:34", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys add 269b6a5a-27af-4253-9152-313168f66481 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"269b6a5a-27af-4253-9152-313168f66481\",\"type\":\"local\",\"address\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A6YzxNYeYqybEs6viNjf2h84S9i05lQjeOdrhkrNDLcZ\\\"}\",\"mnemonic\":\"leopard oyster reform shoe orange eye canal belt silk rib defense blame shuffle female produce yard venture hotel angry become mistake moment industry unknown\"}", "stderr": ""}
{"time": "2025-10-11 10:09:12", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query bank balances me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k --chain-id=me-chain --count-total=true --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json --reverse=true --limit=10 --page=1", "success": 0, "stdout": "{\"balances\":[],\"pagination\":{\"next_key\":null,\"total\":\"0\"}}", "stderr": ""}
{"time": "2025-10-11 10:09:19", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region me_earth me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k 100mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 10:09:19", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-100919-711d62.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"PBRZOn17YqpTdR2CinyW4YILi2kQrzPtH/5yrfti0m4daSJtbU1LvrOc3yotWSfsE72NPU5Hxm3CyTYEhP9Z5w==\"}},\"sequence\":\"388\"}]}", "stderr": ""}
{"time": "2025-10-11 10:09:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-100919-711d62.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"mpyqQRDcV82lhkJt9SV1ScZ/VrGoQ6XYZCF4D1H/rDxYZ4tyV4dOF03saqJS4i4TDLcRpbeSfe3AFOpaJXLQWQ==\"}},\"sequence\":\"388\"}]}", "stderr": ""}
{"time": "2025-10-11 10:09:51", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-100919-711d62.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"2CWjRFkZRH9WYik4ScmCsg5rfZfHlZ4N24LM7xArQQ9Ntv3XwCARLxRMXHEUzXhN7k2As70MK5gRtqv2pv+6ew==\"}},\"sequence\":\"388\"}]}", "stderr": ""}
{"time": "2025-10-11 10:09:51", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-100919-711d62.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"HDgrnUAaSUTCz+LZPJjtULebbtRNrgD7nfKtUssMuOYFSucelXSp53qBDBTXLwJwRIk//hG+o+/u+TlmpGt+fQ==\"}},\"sequence\":\"388\"}]}", "stderr": ""}
{"time": "2025-10-11 10:09:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-100919-711d62.json super json/tx-sign-20251011-100935-095b96.json json/tx-sign-20251011-100951-7ba338.json json/tx-sign-20251011-100951-8a9d2d.json json/tx-sign-20251011-100952-dd4623.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"388\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkCanKpBENxXzaWGQm31JXVJxn9WsahDpdhkIXgPUf+sPFhni3JXh04XTexqolLiLhMMtxGlt5J97cAU6lolctBZCkAcOCudQBpJRMLP4tk8mO1Qt5tu1E2uAPud8q1Sywy45gVK5x6VdKnneoEMFNcvAnBEiT/+Eb6j7+75OWaka359CkA8FFk6fXtiqlN1HYKKfJbhgguLaRCvM+0f/nKt+2LSbh1pIm1tTUu+s5zfKi1ZJ+wTvY09TkfGbcLJNgSE/1nnCkDYJaNEWRlEf1ZiKThJyYKyDmt9l8eVng3bgszvECtBD022/dfAIBEvFExccRTNeE3uTYCzvQwrmBG2q/am/7p7\"]}", "stderr": ""}
{"time": "2025-10-11 10:09:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-100953-eab396.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"50AA9018D6E45E35F4521AA7C3318085EC9537A43ED7817801EF45FE167E0A44\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 10:10:02", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 50AA9018D6E45E35F4521AA7C3318085EC9537A43ED7817801EF45FE167E0A44 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9018808\",\"txhash\":\"50AA9018D6E45E35F4521AA7C3318085EC9537A43ED7817801EF45FE167E0A44\",\"codespace\":\"\",\"code\":0,\"data\":\"122F0A2D2F6D65746165617274682E777374616B696E672E4D7367576974686472617746726F6D526567696F6E52657370\",\"raw_log\":\"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/metaearth.wstaking.MsgWithdrawFromRegion\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"wstaking\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"},{\\\"key\\\":\\\"tag\\\",\\\"value\\\":\\\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"}]},{\\\"type\\\":\\\"withdraw_from_region\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"regionId\\\",\\\"value\\\":\\\"me_earth\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]}]}]\",\"logs\":[{\"msg_index\":0,\"log\":\"\",\"events\":[{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\"},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"module\",\"value\":\"wstaking\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"receiver\",\"value\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]}]}],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"92978\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"388\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkCanKpBENxXzaWGQm31JXVJxn9WsahDpdhkIXgPUf+sPFhni3JXh04XTexqolLiLhMMtxGlt5J97cAU6lolctBZCkAcOCudQBpJRMLP4tk8mO1Qt5tu1E2uAPud8q1Sywy45gVK5x6VdKnneoEMFNcvAnBEiT/+Eb6j7+75OWaka359CkA8FFk6fXtiqlN1HYKKfJbhgguLaRCvM+0f/nKt+2LSbh1pIm1tTUu+s5zfKi1ZJ+wTvY09TkfGbcLJNgSE/1nnCkDYJaNEWRlEf1ZiKThJyYKyDmt9l8eVng3bgszvECtBD022/dfAIBEvFExccRTNeE3uTYCzvQwrmBG2q/am/7p7\"]},\"timestamp\":\"2025-10-11T02:09:59Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/388\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"mpyqQRDcV82lhkJt9SV1ScZ/VrGoQ6XYZCF4D1H/rDxYZ4tyV4dOF03saqJS4i4TDLcRpbeSfe3AFOpaJXLQWQ==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"HDgrnUAaSUTCz+LZPJjtULebbtRNrgD7nfKtUssMuOYFSucelXSp53qBDBTXLwJwRIk//hG+o+/u+TlmpGt+fQ==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"PBRZOn17YqpTdR2CinyW4YILi2kQrzPtH/5yrfti0m4daSJtbU1LvrOc3yotWSfsE72NPU5Hxm3CyTYEhP9Z5w==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"2CWjRFkZRH9WYik4ScmCsg5rfZfHlZ4N24LM7xArQQ9Ntv3XwCARLxRMXHEUzXhN7k2As70MK5gRtqv2pv+6ew==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkCanKpBENxXzaWGQm31JXVJxn9WsahDpdhkIXgPUf+sPFhni3JXh04XTexqolLiLhMMtxGlt5J97cAU6lolctBZCkAcOCudQBpJRMLP4tk8mO1Qt5tu1E2uAPud8q1Sywy45gVK5x6VdKnneoEMFNcvAnBEiT/+Eb6j7+75OWaka359CkA8FFk6fXtiqlN1HYKKfJbhgguLaRCvM+0f/nKt+2LSbh1pIm1tTUu+s5zfKi1ZJ+wTvY09TkfGbcLJNgSE/1nnCkDYJaNEWRlEf1ZiKThJyYKyDmt9l8eVng3bgszvECtBD022/dfAIBEvFExccRTNeE3uTYCzvQwrmBG2q/am/7p7\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"index\":true},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"module\",\"value\":\"wstaking\",\"index\":true}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"receiver\",\"value\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 10:10:18", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query bank balances me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k --chain-id=me-chain --count-total=true --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json --reverse=true --limit=10 --page=1", "success": 0, "stdout": "{\"balances\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}],\"pagination\":{\"next_key\":null,\"total\":\"1\"}}", "stderr": ""}
{"time": "2025-10-11 10:18:26", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query bank balances me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g --chain-id=me-chain --count-total=true --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json --reverse=true --limit=10 --page=1", "success": 0, "stdout": "{\"balances\":[],\"pagination\":{\"next_key\":null,\"total\":\"0\"}}", "stderr": ""}
{"time": "2025-10-11 10:19:17", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys list --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae7\",\"type\":\"local\",\"address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A/Is6mBB7EgyJjqdoudxyN4iPQJqT3zRm6GrOtTTQ0hN\\\"}\"},{\"name\":\"25295580-8dfa-43bb-bb2c-e95b176efc81\",\"type\":\"local\",\"address\":\"me1nzena46wkpyktswah9r64lmt7dc9gyq2eacpv5\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A8i3ACn1zkeExMJFEqHk0ya1lZIL48eYcbNv96fkuEtb\\\"}\"},{\"name\":\"269b6a5a-27af-4253-9152-313168f66481\",\"type\":\"local\",\"address\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A6YzxNYeYqybEs6viNjf2h84S9i05lQjeOdrhkrNDLcZ\\\"}\"},{\"name\":\"a3095cbe-ffca-400f-85b3-63b6a7dbbac6\",\"type\":\"local\",\"address\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"ApoQJopYcpOi883wDXZfCho1GTwY9ZFjCgTpIiRt6ZRL\\\"}\"},{\"name\":\"chn_node_user\",\"type\":\"local\",\"address\":\"me1jyprg7mjvztdfqrjxs4a5kttfrq4agvn3adm20\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AjMYcK/z46JRw61mnL8yHNo1tf3YvSNWuVaADJFI48Mk\\\"}\"},{\"name\":\"meid_dao\",\"type\":\"local\",\"address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AntqzGa+CNdTVkuT8vUVM/z3lqwqGapuRbdEsjGM5Xu9\\\"}\"},{\"name\":\"super\",\"type\":\"multi\",\"address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.multisig.LegacyAminoPubKey\\\",\\\"threshold\\\":3,\\\"public_keys\\\":[{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}]}\"},{\"name\":\"u1\",\"type\":\"local\",\"address\":\"me1mxkrx6f2x63tfcgevktskzldyetc55emwaxwgu\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"}\"},{\"name\":\"u2\",\"type\":\"local\",\"address\":\"me1qc87vw7hcm9zxc7acznwgcxt9gt6c39zwnnq4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"}\"},{\"name\":\"u3\",\"type\":\"local\",\"address\":\"me17wpu0whdfg647297cpnleedg2vtd5lhk407d3l\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"}\"},{\"name\":\"u4\",\"type\":\"local\",\"address\":\"me16atdhygxvdthtgxzsj2g4p6eekkxkngvy9amqy\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"}\"},{\"name\":\"u5\",\"type\":\"local\",\"address\":\"me1kwjh8x4jqvrruwq6tghyz2kztf9vqqc4l04lnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"}\"},{\"name\":\"u6\",\"type\":\"local\",\"address\":\"me1lz42epyqsqy6p4fejdanshcempzwahqxrmdn4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}\"},{\"name\":\"u7\",\"type\":\"local\",\"address\":\"me1mh42v6pjd62j95pgac3epwp7kxlps2ntw4ff3w\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"}\"}]", "stderr": ""}
{"time": "2025-10-11 10:27:42", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query bank balances me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g --chain-id=me-chain --count-total=true --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json --reverse=true --limit=10 --page=1", "success": 0, "stdout": "{\"balances\":[],\"pagination\":{\"next_key\":null,\"total\":\"0\"}}", "stderr": ""}
{"time": "2025-10-11 10:27:52", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region me_earth me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g 100mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 10:27:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-102752-9121d3.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"aoouFqi3dpLxni3kxyLWcyg8WBw8yuNq5wBZeT8XwLh5bXEICxDhzV21eIMDoptbN1NEdJGOOwcj7Q7JwOrjcw==\"}},\"sequence\":\"389\"}]}", "stderr": ""}
{"time": "2025-10-11 10:27:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-102752-9121d3.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"bTDe30PMMdLepW/VioyMR02Mt4VdnBOfbp//QHUGoONZPUXBWH/6rCsdLRD4AC/kMqV9YHO8lokPHWpWK1c/DA==\"}},\"sequence\":\"389\"}]}", "stderr": ""}
{"time": "2025-10-11 10:27:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-102752-9121d3.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"ZNCJVZ5o50MkUYUBgkWH8/yc7EREoTu1arDp16R3YRh00fau3eG0CavIuSxGPCZZeC99QL+/VdsRcD8Z9h9FSA==\"}},\"sequence\":\"389\"}]}", "stderr": ""}
{"time": "2025-10-11 10:27:54", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-102752-9121d3.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"+mpw2CHe4S+fxJMj+pnQ0zBU2V/0Npsu7dR72nwZaHAsbv69wD4OSwqkoCpsEhxptREXhztinXTCApZUhHrTcg==\"}},\"sequence\":\"389\"}]}", "stderr": ""}
{"time": "2025-10-11 10:27:54", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-102752-9121d3.json super json/tx-sign-20251011-102753-cfdfa4.json json/tx-sign-20251011-102753-ef3831.json json/tx-sign-20251011-102754-7d0039.json json/tx-sign-20251011-102754-912882.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"389\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkBtMN7fQ8wx0t6lb9WKjIxHTYy3hV2cE59un/9AdQag41k9RcFYf/qsKx0tEPgAL+QypX1gc7yWiQ8dalYrVz8MCkD6anDYId7hL5/EkyP6mdDTMFTZX/Q2my7t1HvafBlocCxu/r3APg5LCqSgKmwSHGm1EReHO2KddMICllSEetNyCkBqii4WqLd2kvGeLeTHItZzKDxYHDzK42rnAFl5PxfAuHltcQgLEOHNXbV4gwOim1s3U0R0kY47ByPtDsnA6uNzCkBk0IlVnmjnQyRRhQGCRYfz/JzsREShO7VqsOnXpHdhGHTR9q7d4bQJq8i5LEY8Jll4L31Av79V2xFwPxn2H0VI\"]}", "stderr": ""}
{"time": "2025-10-11 10:27:55", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-102755-e29f47.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"B7504D2D2B879BFA2F7D06E216F058518C538C12537239539E433E7EBD7EFAAB\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 10:27:56", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx B7504D2D2B879BFA2F7D06E216F058518C538C12537239539E433E7EBD7EFAAB --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (B7504D2D2B879BFA2F7D06E216F058518C538C12537239539E433E7EBD7EFAAB) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 10:27:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx B7504D2D2B879BFA2F7D06E216F058518C538C12537239539E433E7EBD7EFAAB --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9018998\",\"txhash\":\"B7504D2D2B879BFA2F7D06E216F058518C538C12537239539E433E7EBD7EFAAB\",\"codespace\":\"\",\"code\":0,\"data\":\"122F0A2D2F6D65746165617274682E777374616B696E672E4D7367576974686472617746726F6D526567696F6E52657370\",\"raw_log\":\"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/metaearth.wstaking.MsgWithdrawFromRegion\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"wstaking\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"},{\\\"key\\\":\\\"tag\\\",\\\"value\\\":\\\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"}]},{\\\"type\\\":\\\"withdraw_from_region\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"regionId\\\",\\\"value\\\":\\\"me_earth\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000umec\\\"}]}]}]\",\"logs\":[{\"msg_index\":0,\"log\":\"\",\"events\":[{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\"},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"module\",\"value\":\"wstaking\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"receiver\",\"value\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\"},{\"key\":\"amount\",\"value\":\"10000000000umec\"}]}]}],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"92978\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"10000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"389\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkBtMN7fQ8wx0t6lb9WKjIxHTYy3hV2cE59un/9AdQag41k9RcFYf/qsKx0tEPgAL+QypX1gc7yWiQ8dalYrVz8MCkD6anDYId7hL5/EkyP6mdDTMFTZX/Q2my7t1HvafBlocCxu/r3APg5LCqSgKmwSHGm1EReHO2KddMICllSEetNyCkBqii4WqLd2kvGeLeTHItZzKDxYHDzK42rnAFl5PxfAuHltcQgLEOHNXbV4gwOim1s3U0R0kY47ByPtDsnA6uNzCkBk0IlVnmjnQyRRhQGCRYfz/JzsREShO7VqsOnXpHdhGHTR9q7d4bQJq8i5LEY8Jll4L31Av79V2xFwPxn2H0VI\"]},\"timestamp\":\"2025-10-11T02:27:51Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/389\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"bTDe30PMMdLepW/VioyMR02Mt4VdnBOfbp//QHUGoONZPUXBWH/6rCsdLRD4AC/kMqV9YHO8lokPHWpWK1c/DA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"+mpw2CHe4S+fxJMj+pnQ0zBU2V/0Npsu7dR72nwZaHAsbv69wD4OSwqkoCpsEhxptREXhztinXTCApZUhHrTcg==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"aoouFqi3dpLxni3kxyLWcyg8WBw8yuNq5wBZeT8XwLh5bXEICxDhzV21eIMDoptbN1NEdJGOOwcj7Q7JwOrjcw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"ZNCJVZ5o50MkUYUBgkWH8/yc7EREoTu1arDp16R3YRh00fau3eG0CavIuSxGPCZZeC99QL+/VdsRcD8Z9h9FSA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkBtMN7fQ8wx0t6lb9WKjIxHTYy3hV2cE59un/9AdQag41k9RcFYf/qsKx0tEPgAL+QypX1gc7yWiQ8dalYrVz8MCkD6anDYId7hL5/EkyP6mdDTMFTZX/Q2my7t1HvafBlocCxu/r3APg5LCqSgKmwSHGm1EReHO2KddMICllSEetNyCkBqii4WqLd2kvGeLeTHItZzKDxYHDzK42rnAFl5PxfAuHltcQgLEOHNXbV4gwOim1s3U0R0kY47ByPtDsnA6uNzCkBk0IlVnmjnQyRRhQGCRYfz/JzsREShO7VqsOnXpHdhGHTR9q7d4bQJq8i5LEY8Jll4L31Av79V2xFwPxn2H0VI\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"index\":true},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"module\",\"value\":\"wstaking\",\"index\":true}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"receiver\",\"value\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"index\":true},{\"key\":\"amount\",\"value\":\"10000000000umec\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 11:30:08", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys add a13e6ea0-5c91-407a-a0c8-a7c9dde696d1 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"a13e6ea0-5c91-407a-a0c8-a7c9dde696d1\",\"type\":\"local\",\"address\":\"me1lxjqs33ru738vsw3f2je4j99jpxgmjqq3lp2zg\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"AtzAhinItlKqPwj4HKKFqm/lSwZVw1vylYlMQ2cfc9fY\\\"}\",\"mnemonic\":\"drill iron grace rude have ethics coffee program solution layer peasant mix hedgehog system clump hero hope police window shove hurt lamp leave moral\"}", "stderr": ""}
{"time": "2025-10-11 14:13:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys add 596cef0e-0180-4450-a222-04887434e4e2 --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "", "stderr": "{\"name\":\"596cef0e-0180-4450-a222-04887434e4e2\",\"type\":\"local\",\"address\":\"me1nxpshtmk4v9440shrwalvzll8e227ajkczxg2m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A/jYHgJhbF5UmP8A6y/hDnfO+RlUj6KPlWqdowCEmjzW\\\"}\",\"mnemonic\":\"warm retire desert hat air example carpet place future essay runway noise distance gain river kitten search lab curtain clever stay open melt earn\"}"}
{"time": "2025-10-11 14:13:51", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys add 088778e6-18e8-4218-9c41-4a4ca4512cac --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "", "stderr": "{\"name\":\"088778e6-18e8-4218-9c41-4a4ca4512cac\",\"type\":\"local\",\"address\":\"me1ngwqyf7drpj48kk93q7ewnpfmyxky007pg2pfn\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A1OMpqzjZtbBnqQhNyTw63ANRdW7jPKg41fWIRrQeUjC\\\"}\",\"mnemonic\":\"noble couch umbrella today hurt hammer frame opera turn enlist motion badge warfare critic police recall level outdoor antenna level audit fish biology sheriff\"}"}
{"time": "2025-10-11 14:17:42", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf me1nxpshtmk4v9440shrwalvzll8e227ajkczxg2m 2dmec --from=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --fees=1000000udmec --gas=400000 --chain-id=me-da --home=/home/lino/.meda-app_uat --keyring-backend=test --node=http://118.175.0.230:36657 --output=json --yes", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"2D6A643F5EBDB3A6A5F76DA5888B02DBC37ACEAEC0ADB1D4723A8F2C9DCF08A1\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 14:17:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd query tx 2D6A643F5EBDB3A6A5F76DA5888B02DBC37ACEAEC0ADB1D4723A8F2C9DCF08A1 --chain-id=me-da --home=/home/lino/.meda-app_uat --node=http://118.175.0.230:36657 --output=json", "success": 0, "stdout": "{\"height\":\"1141581\",\"txhash\":\"2D6A643F5EBDB3A6A5F76DA5888B02DBC37ACEAEC0ADB1D4723A8F2C9DCF08A1\",\"codespace\":\"sdk\",\"code\":5,\"data\":\"\",\"raw_log\":\"failed to execute message; message index: 0: 0dmec is smaller than 2dmec: insufficient funds\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"52871\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\"from_address\":\"me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf\",\"to_address\":\"me1nxpshtmk4v9440shrwalvzll8e227ajkczxg2m\",\"amount\":[{\"denom\":\"dmec\",\"amount\":\"2\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AyJ2AEiI1x77zcOPmMbEVTNE5U666Vl7HMrm/8q8Ay6Y\"},\"mode_info\":{\"single\":{\"mode\":\"SIGN_MODE_DIRECT\"}},\"sequence\":\"118\"}],\"fee\":{\"amount\":[{\"denom\":\"udmec\",\"amount\":\"1000000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"pM1K5HV9zXreLv8kO1wlsK3s7CkF4tzeC8wps0Zf0oJsK2gTj7R5FbwsEVUoLoIcs/Po7Vb4UnV5JwCzrln4mQ==\"]},\"timestamp\":\"2025-10-11T06:17:37Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"ZmVl\",\"value\":null,\"index\":true},{\"key\":\"ZmVlX3BheWVy\",\"value\":\"bWUxZDRoNWs2amQ1dnJqZ3N4eTlsd3JwaHhsc3J2ODcwcGRhcHQwdWY=\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"YWNjX3NlcQ==\",\"value\":\"bWUxZDRoNWs2amQ1dnJqZ3N4eTlsd3JwaHhsc3J2ODcwcGRhcHQwdWYvMTE4\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"c2lnbmF0dXJl\",\"value\":\"cE0xSzVIVjl6WHJlTHY4a08xd2xzSzNzN0NrRjR0emVDOHdwczBaZjBvSnNLMmdUajdSNUZid3NFVlVvTG9JY3MvUG83VmI0VW5WNUp3Q3pybG40bVE9PQ==\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 14:31:00", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys add c5d0e2d7-ff99-45a3-9ff6-620a3aa98472 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"c5d0e2d7-ff99-45a3-9ff6-620a3aa98472\",\"type\":\"local\",\"address\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A0bz34IhsZ9lb8h7iW46a/FtvAbMvIn7Tc7EFDUqmKhk\\\"}\",\"mnemonic\":\"sail wall shrug perfect hard drink keep course penalty absorb answer across increase motor brain divorce border civil valley tourist slight car core bike\"}", "stderr": ""}
{"time": "2025-10-11 14:31:49", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region me_earth me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s 10mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 14:31:49", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-143149-fc1132.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"+2IAUCY5GYkiB/H3ZXfaVUOYReABVu95znY8aZw6q+Fxs+MLnhaRw+JPtAiC1XUxcIwHftg+ICS8HaGWlUrF0w==\"}},\"sequence\":\"390\"}]}", "stderr": ""}
{"time": "2025-10-11 14:31:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-143149-fc1132.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"fO9MTHke1dqn7miSRd8vULhqexW7PTpgcrvzMiN+UI4PUPBURSAlZWOgTd7TRv3pR5xk+lenDPq51ZaCyvrUsQ==\"}},\"sequence\":\"390\"}]}", "stderr": ""}
{"time": "2025-10-11 14:31:50", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-143149-fc1132.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"bDk0wytTOeniVZxxAu9ppwsQWovKCRxeGjEMaOKtWzpeW1MG8Z3+KXw4KdpYkgKBSLLgBN4Gry2OjCFbcHG3Pg==\"}},\"sequence\":\"390\"}]}", "stderr": ""}
{"time": "2025-10-11 14:31:51", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-143149-fc1132.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"82k4hfVsnc5CZztxhaDIP9xUzeT7KACS39xdGIPlaVgzB9yN4YKntSBDk1fLX2ntkVZIpa5gDyZJTcy7PGvVyw==\"}},\"sequence\":\"390\"}]}", "stderr": ""}
{"time": "2025-10-11 14:31:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-143149-fc1132.json super json/tx-sign-20251011-143150-b35d36.json json/tx-sign-20251011-143150-6c597b.json json/tx-sign-20251011-143151-21d75f.json json/tx-sign-20251011-143153-b2aa70.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"390\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkB870xMeR7V2qfuaJJF3y9QuGp7Fbs9OmByu/MyI35Qjg9Q8FRFICVlY6BN3tNG/elHnGT6V6cM+rnVloLK+tSxCkDzaTiF9WydzkJnO3GFoMg/3FTN5PsoAJLf3F0Yg+VpWDMH3I3hgqe1IEOTV8tfae2RVkilrmAPJklNzLs8a9XLCkD7YgBQJjkZiSIH8fdld9pVQ5hF4AFW73nOdjxpnDqr4XGz4wueFpHD4k+0CILVdTFwjAd+2D4gJLwdoZaVSsXTCkBsOTTDK1M56eJVnHEC72mnCxBai8oJHF4aMQxo4q1bOl5bUwbxnf4pfDgp2liSAoFIsuAE3gavLY6MIVtwcbc+\"]}", "stderr": ""}
{"time": "2025-10-11 14:31:53", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-143153-af994c.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"6243A25C765E5B68C4B349D4B6503C854E28A8C89EFAA7B3984AA0EE9777B4D0\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 14:31:54", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 6243A25C765E5B68C4B349D4B6503C854E28A8C89EFAA7B3984AA0EE9777B4D0 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (6243A25C765E5B68C4B349D4B6503C854E28A8C89EFAA7B3984AA0EE9777B4D0) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 14:31:57", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 6243A25C765E5B68C4B349D4B6503C854E28A8C89EFAA7B3984AA0EE9777B4D0 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (6243A25C765E5B68C4B349D4B6503C854E28A8C89EFAA7B3984AA0EE9777B4D0) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 14:31:59", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 6243A25C765E5B68C4B349D4B6503C854E28A8C89EFAA7B3984AA0EE9777B4D0 --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9021623\",\"txhash\":\"6243A25C765E5B68C4B349D4B6503C854E28A8C89EFAA7B3984AA0EE9777B4D0\",\"codespace\":\"\",\"code\":0,\"data\":\"122F0A2D2F6D65746165617274682E777374616B696E672E4D7367576974686472617746726F6D526567696F6E52657370\",\"raw_log\":\"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/metaearth.wstaking.MsgWithdrawFromRegion\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"wstaking\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"},{\\\"key\\\":\\\"tag\\\",\\\"value\\\":\\\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"}]},{\\\"type\\\":\\\"withdraw_from_region\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"regionId\\\",\\\"value\\\":\\\"me_earth\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"}]}]}]\",\"logs\":[{\"msg_index\":0,\"log\":\"\",\"events\":[{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\"},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"module\",\"value\":\"wstaking\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"receiver\",\"value\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"}]}]}],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"92938\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"390\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkB870xMeR7V2qfuaJJF3y9QuGp7Fbs9OmByu/MyI35Qjg9Q8FRFICVlY6BN3tNG/elHnGT6V6cM+rnVloLK+tSxCkDzaTiF9WydzkJnO3GFoMg/3FTN5PsoAJLf3F0Yg+VpWDMH3I3hgqe1IEOTV8tfae2RVkilrmAPJklNzLs8a9XLCkD7YgBQJjkZiSIH8fdld9pVQ5hF4AFW73nOdjxpnDqr4XGz4wueFpHD4k+0CILVdTFwjAd+2D4gJLwdoZaVSsXTCkBsOTTDK1M56eJVnHEC72mnCxBai8oJHF4aMQxo4q1bOl5bUwbxnf4pfDgp2liSAoFIsuAE3gavLY6MIVtwcbc+\"]},\"timestamp\":\"2025-10-11T06:31:52Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/390\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"fO9MTHke1dqn7miSRd8vULhqexW7PTpgcrvzMiN+UI4PUPBURSAlZWOgTd7TRv3pR5xk+lenDPq51ZaCyvrUsQ==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"82k4hfVsnc5CZztxhaDIP9xUzeT7KACS39xdGIPlaVgzB9yN4YKntSBDk1fLX2ntkVZIpa5gDyZJTcy7PGvVyw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"+2IAUCY5GYkiB/H3ZXfaVUOYReABVu95znY8aZw6q+Fxs+MLnhaRw+JPtAiC1XUxcIwHftg+ICS8HaGWlUrF0w==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"bDk0wytTOeniVZxxAu9ppwsQWovKCRxeGjEMaOKtWzpeW1MG8Z3+KXw4KdpYkgKBSLLgBN4Gry2OjCFbcHG3Pg==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkB870xMeR7V2qfuaJJF3y9QuGp7Fbs9OmByu/MyI35Qjg9Q8FRFICVlY6BN3tNG/elHnGT6V6cM+rnVloLK+tSxCkDzaTiF9WydzkJnO3GFoMg/3FTN5PsoAJLf3F0Yg+VpWDMH3I3hgqe1IEOTV8tfae2RVkilrmAPJklNzLs8a9XLCkD7YgBQJjkZiSIH8fdld9pVQ5hF4AFW73nOdjxpnDqr4XGz4wueFpHD4k+0CILVdTFwjAd+2D4gJLwdoZaVSsXTCkBsOTTDK1M56eJVnHEC72mnCxBai8oJHF4aMQxo4q1bOl5bUwbxnf4pfDgp2liSAoFIsuAE3gavLY6MIVtwcbc+\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"index\":true},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"module\",\"value\":\"wstaking\",\"index\":true}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"receiver\",\"value\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 14:43:45", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd tx bank send me1jrkxf9xjuzrudcywl0kwxp5q5qxy43yejrddke me1nxpshtmk4v9440shrwalvzll8e227ajkczxg2m 1dmec --from=me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf --fees=1000000udmec --gas=400000 --chain-id=me-da --home=/home/lino/.meda-app_uat --keyring-backend=test --node=http://118.175.0.230:36657 --output=json --yes", "success": 1, "stdout": "", "stderr": "Error: key with address me1jrkxf9xjuzrudcywl0kwxp5q5qxy43yejrddke not found: key not found"}
{"time": "2025-10-11 14:45:27", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys add 4e4c3a82-0e87-43e3-9973-5c4abb578035 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"4e4c3a82-0e87-43e3-9973-5c4abb578035\",\"type\":\"local\",\"address\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A7+EL9lw5DpfZIOj1wsfQgfrLHrR7hCIM80WauFPG8AC\\\"}\",\"mnemonic\":\"sick play treat refuse benefit pave change suffer fever spice clap vendor van remind accuse dignity nurse furnace palm tennis unable correct finger muffin\"}", "stderr": ""}
{"time": "2025-10-11 14:45:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx staking withdraw-from-region me_earth me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk 10mec --from=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --fees=100000umec --gas=400000 --generate-only --chain-id=me-chain --home=/home/lino/.mechain_uat --keyring-backend=test --node=tcp://118.175.0.230:26657 --output=json --yes", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[]}", "stderr": ""}
{"time": "2025-10-11 14:45:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-144535-83ebfc.json --from=u1 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"4H8tGWdmdAf7PY9kRjsrf2U/xM5fpa4E4OykDe/Jyag9SwtALzD1+bgpPsKnTRgzEsD8cgZWNiBeXeIio3hC+g==\"}},\"sequence\":\"391\"}]}", "stderr": ""}
{"time": "2025-10-11 14:45:35", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-144535-83ebfc.json --from=u2 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"7BMAPM5KPiQaLWm7o9BqpLjeBlcIt/vJfv+bq8vtxoggqkeo3sMYYtxslg084r93W57vUHk0yc/JnJNysIuftw==\"}},\"sequence\":\"391\"}]}", "stderr": ""}
{"time": "2025-10-11 14:45:36", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-144535-83ebfc.json --from=u3 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"9iS4zCq+pn9mRvj7X3U1ACQcrZJA0mvDn8ACt0dHXNxDyYcUgiZI5zBK7+jUXn+DII2uq0YccJezSvLIO34lfA==\"}},\"sequence\":\"391\"}]}", "stderr": ""}
{"time": "2025-10-11 14:45:36", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx sign json/tx-generate-only-20251011-144535-83ebfc.json --from=u4 --multisig=me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"signatures\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},\"data\":{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\",\"signature\":\"XVm3GEQP+kF8ypvdSNkP57v6taqA3nsvcZB6+XVMwo4/CktOe9jxm/9jd0Q06ARyxFEgH57tM/PGSPBDCQUKmQ==\"}},\"sequence\":\"391\"}]}", "stderr": ""}
{"time": "2025-10-11 14:45:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx multisign json/tx-generate-only-20251011-144535-83ebfc.json super json/tx-sign-20251011-144535-2c8414.json json/tx-sign-20251011-144536-4964bf.json json/tx-sign-20251011-144536-fd5444.json json/tx-sign-20251011-144537-1d7c28.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"391\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkDsEwA8zko+JBotabuj0GqkuN4GVwi3+8l+/5ury+3GiCCqR6jewxhi3GyWDTziv3dbnu9QeTTJz8mck3Kwi5+3CkBdWbcYRA/6QXzKm91I2Q/nu/q1qoDeey9xkHr5dUzCjj8KS0572PGb/2N3RDToBHLEUSAfnu0z88ZI8EMJBQqZCkDgfy0ZZ2Z0B/s9j2RGOyt/ZT/Ezl+lrgTg7KQN78nJqD1LC0AvMPX5uCk+wqdNGDMSwPxyBlY2IF5d4iKjeEL6CkD2JLjMKr6mf2ZG+PtfdTUAJBytkkDSa8OfwAK3R0dc3EPJhxSCJkjnMErv6NRef4Mgja6rRhxwl7NK8sg7fiV8\"]}", "stderr": ""}
{"time": "2025-10-11 14:45:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/med tx broadcast json/tx-multisign-20251011-144537-b86960.json --chain-id=me-chain --node=tcp://118.175.0.230:26657 --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"height\":\"0\",\"txhash\":\"033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F\",\"codespace\":\"\",\"code\":0,\"data\":\"\",\"raw_log\":\"[]\",\"logs\":[],\"info\":\"\",\"gas_wanted\":\"0\",\"gas_used\":\"0\",\"tx\":null,\"timestamp\":\"\",\"events\":[]}", "stderr": ""}
{"time": "2025-10-11 14:45:39", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 14:45:41", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 14:45:43", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 1, "stdout": "", "stderr": "Error: error in json rpc client, with http response metadata: (Status: 200 OK, Protocol HTTP/1.1). RPC error -32603 - Internal error: tx (033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F) not found\nUsage:\n  med query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string        The network chain ID\n      --enable_me_hub_logger   use me-hub logger instead of cosmos lib logger\n      --home string            directory for config and data (default \"/home/lino/.mechain\")\n      --log_format string      The logging format (json|plain) (default \"plain\")\n      --log_level string       The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --log_no_color           Disable colored logs\n      --trace                  print out full stack trace on errors"}
{"time": "2025-10-11 14:45:46", "client_host": "172.17.16.1", "command": "/usr/local/bin/med query tx 033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F --home=/home/lino/.mechain_uat --node=tcp://118.175.0.230:26657 --output=json", "success": 0, "stdout": "{\"height\":\"9021771\",\"txhash\":\"033B0BA0E5C7AE57EECE11490344BA98FD39743D881E28B8C7A9DCF8A1187F1F\",\"codespace\":\"\",\"code\":0,\"data\":\"122F0A2D2F6D65746165617274682E777374616B696E672E4D7367576974686472617746726F6D526567696F6E52657370\",\"raw_log\":\"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/metaearth.wstaking.MsgWithdrawFromRegion\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"wstaking\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"},{\\\"key\\\":\\\"tag\\\",\\\"value\\\":\\\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"}]},{\\\"type\\\":\\\"withdraw_from_region\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"regionId\\\",\\\"value\\\":\\\"me_earth\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\\\"},{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"1000000000umec\\\"}]}]}]\",\"logs\":[{\"msg_index\":0,\"log\":\"\",\"events\":[{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\"},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\"},{\"key\":\"module\",\"value\":\"wstaking\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\"},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\"},{\"key\":\"receiver\",\"value\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\"},{\"key\":\"amount\",\"value\":\"1000000000umec\"}]}]}],\"info\":\"\",\"gas_wanted\":\"400000\",\"gas_used\":\"92938\",\"tx\":{\"@type\":\"/cosmos.tx.v1beta1.Tx\",\"body\":{\"messages\":[{\"@type\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"withdrawer\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"region_id\":\"me_earth\",\"receiver\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"amount\":[{\"denom\":\"umec\",\"amount\":\"1000000000\"}]}],\"memo\":\"\",\"timeout_height\":\"0\",\"extension_options\":[],\"non_critical_extension_options\":[]},\"auth_info\":{\"signer_infos\":[{\"public_key\":{\"@type\":\"/cosmos.crypto.multisig.LegacyAminoPubKey\",\"threshold\":3,\"public_keys\":[{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\"},{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\"}]},\"mode_info\":{\"multi\":{\"bitarray\":{\"extra_bits_stored\":7,\"elems\":\"tA==\"},\"mode_infos\":[{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}},{\"single\":{\"mode\":\"SIGN_MODE_LEGACY_AMINO_JSON\"}}]}},\"sequence\":\"391\"}],\"fee\":{\"amount\":[{\"denom\":\"umec\",\"amount\":\"100000\"}],\"gas_limit\":\"400000\",\"payer\":\"\",\"granter\":\"\"},\"tip\":null},\"signatures\":[\"CkDsEwA8zko+JBotabuj0GqkuN4GVwi3+8l+/5ury+3GiCCqR6jewxhi3GyWDTziv3dbnu9QeTTJz8mck3Kwi5+3CkBdWbcYRA/6QXzKm91I2Q/nu/q1qoDeey9xkHr5dUzCjj8KS0572PGb/2N3RDToBHLEUSAfnu0z88ZI8EMJBQqZCkDgfy0ZZ2Z0B/s9j2RGOyt/ZT/Ezl+lrgTg7KQN78nJqD1LC0AvMPX5uCk+wqdNGDMSwPxyBlY2IF5d4iKjeEL6CkD2JLjMKr6mf2ZG+PtfdTUAJBytkkDSa8OfwAK3R0dc3EPJhxSCJkjnMErv6NRef4Mgja6rRhxwl7NK8sg7fiV8\"]},\"timestamp\":\"2025-10-11T06:45:33Z\",\"events\":[{\"type\":\"tx\",\"attributes\":[{\"key\":\"acc_seq\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al/391\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"7BMAPM5KPiQaLWm7o9BqpLjeBlcIt/vJfv+bq8vtxoggqkeo3sMYYtxslg084r93W57vUHk0yc/JnJNysIuftw==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"XVm3GEQP+kF8ypvdSNkP57v6taqA3nsvcZB6+XVMwo4/CktOe9jxm/9jd0Q06ARyxFEgH57tM/PGSPBDCQUKmQ==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"4H8tGWdmdAf7PY9kRjsrf2U/xM5fpa4E4OykDe/Jyag9SwtALzD1+bgpPsKnTRgzEsD8cgZWNiBeXeIio3hC+g==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"9iS4zCq+pn9mRvj7X3U1ACQcrZJA0mvDn8ACt0dHXNxDyYcUgiZI5zBK7+jUXn+DII2uq0YccJezSvLIO34lfA==\",\"index\":true}]},{\"type\":\"tx\",\"attributes\":[{\"key\":\"signature\",\"value\":\"CkDsEwA8zko+JBotabuj0GqkuN4GVwi3+8l+/5ury+3GiCCqR6jewxhi3GyWDTziv3dbnu9QeTTJz8mck3Kwi5+3CkBdWbcYRA/6QXzKm91I2Q/nu/q1qoDeey9xkHr5dUzCjj8KS0572PGb/2N3RDToBHLEUSAfnu0z88ZI8EMJBQqZCkDgfy0ZZ2Z0B/s9j2RGOyt/ZT/Ezl+lrgTg7KQN78nJqD1LC0AvMPX5uCk+wqdNGDMSwPxyBlY2IF5d4iKjeEL6CkD2JLjMKr6mf2ZG+PtfdTUAJBytkkDSa8OfwAK3R0dc3EPJhxSCJkjnMErv6NRef4Mgja6rRhxwl7NK8sg7fiV8\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/metaearth.wstaking.MsgWithdrawFromRegion\",\"index\":true},{\"key\":\"sender\",\"value\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"index\":true},{\"key\":\"module\",\"value\":\"wstaking\",\"index\":true}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true},{\"key\":\"tag\",\"value\":\"WithdrawFromRegion_SendCoinsFromRegionTreasureAccountToUserAccount_me_earth\",\"index\":true}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true}]},{\"type\":\"withdraw_from_region\",\"attributes\":[{\"key\":\"regionId\",\"value\":\"me_earth\",\"index\":true},{\"key\":\"sender\",\"value\":\"me15xdgc7uquhl5p54rdtv3w6j405gdq8muhpv5g2\",\"index\":true},{\"key\":\"receiver\",\"value\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"index\":true},{\"key\":\"amount\",\"value\":\"1000000000umec\",\"index\":true}]}]}", "stderr": ""}
{"time": "2025-10-11 14:46:34", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys add 24faceef-2255-48a7-88c6-bfb7ab8355fb --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "", "stderr": "{\"name\":\"24faceef-2255-48a7-88c6-bfb7ab8355fb\",\"type\":\"local\",\"address\":\"me1w278y8lkt7445n5ax84q8fv0k2le8a6fswh2z8\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A4xejwf5Gl7z+EsHmI3nYZCQQPvddWTRFsC0RmCeosdf\\\"}\",\"mnemonic\":\"result transfer mixed maid bacon basket river mimic pledge wealth lobster disease coil cycle coyote tennis army inform rookie plug pave mammal forest gap\"}"}
{"time": "2025-10-11 14:46:58", "client_host": "172.17.16.1", "command": "/usr/local/bin/meda-appd keys list --home=/home/lino/.meda-app_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"088778e6-18e8-4218-9c41-4a4ca4512cac\",\"type\":\"local\",\"address\":\"me1ngwqyf7drpj48kk93q7ewnpfmyxky007pg2pfn\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A1OMpqzjZtbBnqQhNyTw63ANRdW7jPKg41fWIRrQeUjC\\\"}\"},{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae9\",\"type\":\"local\",\"address\":\"me10cpuu2ngt89arjcu6c6gp6h6q435sskjdd8l64\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ay7ZHh/clMZoO219ntDK8W8WohXohsXy/PJuMzkX46ta\\\"}\"},{\"name\":\"24faceef-2255-48a7-88c6-bfb7ab8355fb\",\"type\":\"local\",\"address\":\"me1w278y8lkt7445n5ax84q8fv0k2le8a6fswh2z8\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A4xejwf5Gl7z+EsHmI3nYZCQQPvddWTRFsC0RmCeosdf\\\"}\"},{\"name\":\"515be0c4-5f71-4139-9b1a-821bf49f3e5f\",\"type\":\"local\",\"address\":\"me1fhwzdnah0x3ljv2f8yg7umg2rj5y52w2mmnhaf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AzkGpy4THZMJ8lvbrEPQ9fgWVC8/B+ELTi+hvr4H5kv0\\\"}\"},{\"name\":\"596cef0e-0180-4450-a222-04887434e4e2\",\"type\":\"local\",\"address\":\"me1nxpshtmk4v9440shrwalvzll8e227ajkczxg2m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A/jYHgJhbF5UmP8A6y/hDnfO+RlUj6KPlWqdowCEmjzW\\\"}\"},{\"name\":\"811a8a65-67db-4d2a-bb77-2db8fc99fa87\",\"type\":\"local\",\"address\":\"me1fw6hh2fk2djjjlv6szcm9dy8a6xumas47esf9m\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AhndWrtUclUhgvdqjnF+Irk/uDZeHzlNbD5k0qXHO++Y\\\"}\"},{\"name\":\"8b79f3e3-7617-44a3-bcea-cead0a7d73f0\",\"type\":\"local\",\"address\":\"me1npucpz37wnavje7thmkckj8padf9x9ejntntg4\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A+Zs/zRSqd5EX66n5xMzZvYd2oGpOr5iwDiCytF2FiwF\\\"}\"},{\"name\":\"global_dao\",\"type\":\"local\",\"address\":\"me1d4h5k6jd5vrjgsxy9lwrphxlsrv870pdapt0uf\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AyJ2AEiI1x77zcOPmMbEVTNE5U666Vl7HMrm/8q8Ay6Y\\\"}\"}]", "stderr": ""}
{"time": "2025-10-11 14:47:06", "client_host": "172.17.16.1", "command": "/usr/local/bin/med keys list --home=/home/lino/.mechain_uat --keyring-backend=test --output=json", "success": 0, "stdout": "[{\"name\":\"0fcd275c-28ff-4293-98a7-f08b96640ae7\",\"type\":\"local\",\"address\":\"me1075jrzr53sh5jsvku8azaz8x53d8kqamk36av9\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A/Is6mBB7EgyJjqdoudxyN4iPQJqT3zRm6GrOtTTQ0hN\\\"}\"},{\"name\":\"25295580-8dfa-43bb-bb2c-e95b176efc81\",\"type\":\"local\",\"address\":\"me1nzena46wkpyktswah9r64lmt7dc9gyq2eacpv5\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A8i3ACn1zkeExMJFEqHk0ya1lZIL48eYcbNv96fkuEtb\\\"}\"},{\"name\":\"269b6a5a-27af-4253-9152-313168f66481\",\"type\":\"local\",\"address\":\"me10eduka3f4aewfqhfeulmwfvz7e03m9s3u7ns7g\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A6YzxNYeYqybEs6viNjf2h84S9i05lQjeOdrhkrNDLcZ\\\"}\"},{\"name\":\"4e4c3a82-0e87-43e3-9973-5c4abb578035\",\"type\":\"local\",\"address\":\"me1vy54rtk92nge4elrt0rg5g4qwryjuujj8qzftk\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A7+EL9lw5DpfZIOj1wsfQgfrLHrR7hCIM80WauFPG8AC\\\"}\"},{\"name\":\"a13e6ea0-5c91-407a-a0c8-a7c9dde696d1\",\"type\":\"local\",\"address\":\"me1lxjqs33ru738vsw3f2je4j99jpxgmjqq3lp2zg\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"AtzAhinItlKqPwj4HKKFqm/lSwZVw1vylYlMQ2cfc9fY\\\"}\"},{\"name\":\"a3095cbe-ffca-400f-85b3-63b6a7dbbac6\",\"type\":\"local\",\"address\":\"me1nc3mhw77ag3kzp0jlklczj284ez9ycshvwr84k\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"ApoQJopYcpOi883wDXZfCho1GTwY9ZFjCgTpIiRt6ZRL\\\"}\"},{\"name\":\"c5d0e2d7-ff99-45a3-9ff6-620a3aa98472\",\"type\":\"local\",\"address\":\"me16dxdwe2temn8lezjr8sdsautqxt85v43cs8r9s\",\"pubkey\":\"{\\\"@type\\\":\\\"/ethermint.crypto.v1.ethsecp256k1.PubKey\\\",\\\"key\\\":\\\"A0bz34IhsZ9lb8h7iW46a/FtvAbMvIn7Tc7EFDUqmKhk\\\"}\"},{\"name\":\"chn_node_user\",\"type\":\"local\",\"address\":\"me1jyprg7mjvztdfqrjxs4a5kttfrq4agvn3adm20\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AjMYcK/z46JRw61mnL8yHNo1tf3YvSNWuVaADJFI48Mk\\\"}\"},{\"name\":\"meid_dao\",\"type\":\"local\",\"address\":\"me106qu9ksk4xlrq4m2r9pm7tn9au6v0cpcjk2dk0\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AntqzGa+CNdTVkuT8vUVM/z3lqwqGapuRbdEsjGM5Xu9\\\"}\"},{\"name\":\"super\",\"type\":\"multi\",\"address\":\"me1hd5y9hepjkc22ewaquldcjqellpn28k4dxz5al\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.multisig.LegacyAminoPubKey\\\",\\\"threshold\\\":3,\\\"public_keys\\\":[{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"},{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}]}\"},{\"name\":\"u1\",\"type\":\"local\",\"address\":\"me1mxkrx6f2x63tfcgevktskzldyetc55emwaxwgu\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A0TMLOXjEkl7kZDvQEwUB4Ez5m7bTRbH5mgTZ8Dhyb5Q\\\"}\"},{\"name\":\"u2\",\"type\":\"local\",\"address\":\"me1qc87vw7hcm9zxc7acznwgcxt9gt6c39zwnnq4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AgpLQceqR+BMnuWY1yiC2UNMKiGZ8Cu1vjqhpqcenlh4\\\"}\"},{\"name\":\"u3\",\"type\":\"local\",\"address\":\"me17wpu0whdfg647297cpnleedg2vtd5lhk407d3l\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Aocexn55Vl8muEDDvq7k8omb+llka+3hdf8234NwSde9\\\"}\"},{\"name\":\"u4\",\"type\":\"local\",\"address\":\"me16atdhygxvdthtgxzsj2g4p6eekkxkngvy9amqy\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A3Ea5cV/cIg6vO2f9+fBD+YZ1ROzaJrkS6ALEYGdnvAa\\\"}\"},{\"name\":\"u5\",\"type\":\"local\",\"address\":\"me1kwjh8x4jqvrruwq6tghyz2kztf9vqqc4l04lnk\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A5WpeI7c3MNtgj8xReegPKOVAb8IKFxHFcaDshuWbzok\\\"}\"},{\"name\":\"u6\",\"type\":\"local\",\"address\":\"me1lz42epyqsqy6p4fejdanshcempzwahqxrmdn4a\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"AxZIy458wqat0leduADUH12aMaD9fwrda7BjalGGpMPA\\\"}\"},{\"name\":\"u7\",\"type\":\"local\",\"address\":\"me1mh42v6pjd62j95pgac3epwp7kxlps2ntw4ff3w\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"A6CStMD5Cuai1fHpCZCIoy7KaQ4yuZRRrNtojJj0jP27\\\"}\"}]", "stderr": ""}
{"time": "2025-10-11 15:00:37", "client_host": "172.17.16.1", "command": "/usr/local/bin/rollappd keys add 705d6134-8e2f-4696-aabb-297aed2aefe2 --home=/home/lino/.rollapp_uat --keyring-backend=test --output=json", "success": 0, "stdout": "{\"name\":\"705d6134-8e2f-4696-aabb-297aed2aefe2\",\"type\":\"local\",\"address\":\"me1n4wsxxduk8rszcg2cw58lwlrts6t9uktajanw9\",\"pubkey\":\"{\\\"@type\\\":\\\"/cosmos.crypto.secp256k1.PubKey\\\",\\\"key\\\":\\\"Ant7IxWGnjZnuelxToZfkVfmY+msaUXf6hHx8qIo5oJx\\\"}\",\"mnemonic\":\"carpet zebra suspect emerge predict crush head mule pond truck off modify paddle naive ethics unit liar rocket bike melody middle artwork waste round\"}", "stderr": ""}
